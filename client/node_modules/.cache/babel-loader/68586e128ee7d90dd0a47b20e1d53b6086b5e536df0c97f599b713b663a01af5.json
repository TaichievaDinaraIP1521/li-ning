{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dinat\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\lining\\\\client\\\\src\\\\context\\\\CartContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { createContext, useContext, useState, useEffect, useRef } from 'react';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_BASE_URL = 'http://localhost:5000/api';\nconst CartContext = /*#__PURE__*/createContext();\nconst ADMIN_CREDENTIALS = {\n  email: 'admin1@mail.ru',\n  password: 'admin12341234'\n};\nexport function CartProvider({\n  children\n}) {\n  _s();\n  const [state, setState] = useState({\n    cartItems: [],\n    user: JSON.parse(localStorage.getItem('user')) || null,\n    isAuthenticated: !!localStorage.getItem('token'),\n    // Изменено: проверяем токен\n    isLoading: false,\n    error: null\n  });\n  const isMounted = useRef(true);\n  useEffect(() => {\n    return () => {\n      isMounted.current = false;\n    };\n  }, []);\n  const safeSetState = newState => {\n    if (isMounted.current) {\n      setState(prevState => ({\n        ...prevState,\n        ...newState\n      }));\n    }\n  };\n\n  // Проверка валидности токена\n  const validateToken = token => {\n    if (!token) return false;\n    // Простая проверка структуры JWT\n    return token.split('.').length === 3;\n  };\n\n  // Сохранение пользователя\n  const saveUserToStorage = userData => {\n    var _userData$user;\n    if (!(userData !== null && userData !== void 0 && (_userData$user = userData.user) !== null && _userData$user !== void 0 && _userData$user.email) || !(userData !== null && userData !== void 0 && userData.token)) {\n      console.error('Неполные данные пользователя:', userData);\n      throw new Error('Отсутствуют обязательные данные пользователя');\n    }\n    if (!validateToken(userData.token)) {\n      throw new Error('Неверный формат токена');\n    }\n    localStorage.setItem('user', JSON.stringify(userData.user));\n    localStorage.setItem('token', userData.token);\n    safeSetState({\n      user: userData.user,\n      isAuthenticated: true\n    });\n  };\n\n  // Получение текущего пользователя\n  const fetchCurrentUser = async () => {\n    const token = localStorage.getItem('token');\n    if (!token || !validateToken(token)) {\n      logout();\n      return;\n    }\n    try {\n      const response = await fetch(`${API_BASE_URL}/auth/me`, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const data = await response.json();\n      if (!data.user) {\n        throw new Error('Неверный формат ответа сервера');\n      }\n      localStorage.setItem('user', JSON.stringify(data.user));\n      safeSetState({\n        user: data.user\n      });\n    } catch (error) {\n      console.error('Ошибка получения пользователя:', error);\n      logout();\n    }\n  };\n\n  // Инициализация при монтировании\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    const user = localStorage.getItem('user');\n    if (token && validateToken(token) && user) {\n      try {\n        safeSetState({\n          user: JSON.parse(user),\n          isAuthenticated: true\n        });\n        fetchCurrentUser();\n      } catch (e) {\n        console.error('Ошибка инициализации:', e);\n        logout();\n      }\n    }\n  }, []);\n\n  // Регистрация (обновлённая версия)\n  const register = async (name, email, password) => {\n    safeSetState({\n      isLoading: true,\n      error: null\n    });\n    try {\n      const response = await fetch(`${API_BASE_URL}/auth/register`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          name,\n          email,\n          password\n        })\n      });\n      const data = await response.json();\n      if (!response.ok) {\n        throw new Error(data.message || 'Ошибка регистрации');\n      }\n      if (!data.user || !data.token) {\n        throw new Error('Сервер не вернул необходимые данные');\n      }\n      saveUserToStorage(data);\n      await fetchCart(data.user.id);\n      return data;\n    } catch (error) {\n      safeSetState({\n        error: error.message\n      });\n      throw error;\n    } finally {\n      safeSetState({\n        isLoading: false\n      });\n    }\n  };\n\n  // Вход (обновлённая версия)\n  const login = async (email, password) => {\n    safeSetState({\n      isLoading: true,\n      error: null\n    });\n    try {\n      // Проверка админа\n      if (email === ADMIN_CREDENTIALS.email && password === ADMIN_CREDENTIALS.password) {\n        const adminData = {\n          user: {\n            id: 'admin-1',\n            name: 'Admin',\n            email: ADMIN_CREDENTIALS.email,\n            isAdmin: true\n          },\n          token: 'mock-admin-token'\n        };\n        saveUserToStorage(adminData);\n        return adminData;\n      }\n\n      // Обычный пользователь\n      const response = await fetch(`${API_BASE_URL}/auth/login`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email,\n          password\n        })\n      });\n      const data = await response.json();\n      if (!response.ok) {\n        throw new Error(data.message || 'Ошибка входа');\n      }\n      if (!data.user || !data.token) {\n        throw new Error('Сервер не вернул необходимые данные');\n      }\n      saveUserToStorage(data);\n      await fetchCart(data.user.id);\n      return data;\n    } catch (error) {\n      safeSetState({\n        error: error.message\n      });\n      throw error;\n    } finally {\n      safeSetState({\n        isLoading: false\n      });\n    }\n  };\n\n  // Остальные методы (fetchCart, saveCart, addToCart и т.д.) остаются без изменений\n\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: {\n      cartItems: state.cartItems,\n      cartCount: state.cartItems.reduce((sum, item) => sum + item.quantity, 0),\n      addToCart,\n      removeFromCart,\n      updateQuantity,\n      user: state.user,\n      isAuthenticated: state.isAuthenticated,\n      isLoading: state.isLoading,\n      error: state.error,\n      login,\n      logout,\n      register,\n      isAdmin: () => {\n        var _state$user;\n        return ((_state$user = state.user) === null || _state$user === void 0 ? void 0 : _state$user.isAdmin) === true;\n      },\n      fetchCurrentUser\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 202,\n    columnNumber: 5\n  }, this);\n}\n_s(CartProvider, \"RokbwCdqePSyuJBEJoAPOgDW4G0=\");\n_c = CartProvider;\nexport const useCart = () => {\n  _s2();\n  const context = useContext(CartContext);\n  if (!context) {\n    throw new Error('useCart должен использоваться внутри CartProvider');\n  }\n  return context;\n};\n_s2(useCart, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["createContext","useContext","useState","useEffect","useRef","toast","jsxDEV","_jsxDEV","API_BASE_URL","CartContext","ADMIN_CREDENTIALS","email","password","CartProvider","children","_s","state","setState","cartItems","user","JSON","parse","localStorage","getItem","isAuthenticated","isLoading","error","isMounted","current","safeSetState","newState","prevState","validateToken","token","split","length","saveUserToStorage","userData","_userData$user","console","Error","setItem","stringify","fetchCurrentUser","logout","response","fetch","headers","ok","status","data","json","e","register","name","method","body","message","fetchCart","id","login","adminData","isAdmin","Provider","value","cartCount","reduce","sum","item","quantity","addToCart","removeFromCart","updateQuantity","_state$user","fileName","_jsxFileName","lineNumber","columnNumber","_c","useCart","_s2","context","$RefreshReg$"],"sources":["C:/Users/dinat/OneDrive/Рабочий стол/lining/client/src/context/CartContext.js"],"sourcesContent":["import { createContext, useContext, useState, useEffect, useRef } from 'react';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nconst API_BASE_URL = 'http://localhost:5000/api';\r\nconst CartContext = createContext();\r\n\r\nconst ADMIN_CREDENTIALS = {\r\n  email: 'admin1@mail.ru',\r\n  password: 'admin12341234'\r\n};\r\n\r\nexport function CartProvider({ children }) {\r\n  const [state, setState] = useState({\r\n    cartItems: [],\r\n    user: JSON.parse(localStorage.getItem('user')) || null,\r\n    isAuthenticated: !!localStorage.getItem('token'), // Изменено: проверяем токен\r\n    isLoading: false,\r\n    error: null\r\n  });\r\n\r\n  const isMounted = useRef(true);\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      isMounted.current = false;\r\n    };\r\n  }, []);\r\n\r\n  const safeSetState = (newState) => {\r\n    if (isMounted.current) {\r\n      setState((prevState) => ({ ...prevState, ...newState }));\r\n    }\r\n  };\r\n\r\n  // Проверка валидности токена\r\n  const validateToken = (token) => {\r\n    if (!token) return false;\r\n    // Простая проверка структуры JWT\r\n    return token.split('.').length === 3;\r\n  };\r\n\r\n  // Сохранение пользователя\r\n  const saveUserToStorage = (userData) => {\r\n    if (!userData?.user?.email || !userData?.token) {\r\n      console.error('Неполные данные пользователя:', userData);\r\n      throw new Error('Отсутствуют обязательные данные пользователя');\r\n    }\r\n\r\n    if (!validateToken(userData.token)) {\r\n      throw new Error('Неверный формат токена');\r\n    }\r\n\r\n    localStorage.setItem('user', JSON.stringify(userData.user));\r\n    localStorage.setItem('token', userData.token);\r\n\r\n    safeSetState({ \r\n      user: userData.user, \r\n      isAuthenticated: true \r\n    });\r\n  };\r\n\r\n  // Получение текущего пользователя\r\n  const fetchCurrentUser = async () => {\r\n    const token = localStorage.getItem('token');\r\n    \r\n    if (!token || !validateToken(token)) {\r\n      logout();\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await fetch(`${API_BASE_URL}/auth/me`, {\r\n        headers: {\r\n          'Authorization': `Bearer ${token}`,\r\n          'Content-Type': 'application/json'\r\n        }\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error(`HTTP error! status: ${response.status}`);\r\n      }\r\n\r\n      const data = await response.json();\r\n      \r\n      if (!data.user) {\r\n        throw new Error('Неверный формат ответа сервера');\r\n      }\r\n\r\n      localStorage.setItem('user', JSON.stringify(data.user));\r\n      safeSetState({ user: data.user });\r\n    } catch (error) {\r\n      console.error('Ошибка получения пользователя:', error);\r\n      logout();\r\n    }\r\n  };\r\n\r\n  // Инициализация при монтировании\r\n  useEffect(() => {\r\n    const token = localStorage.getItem('token');\r\n    const user = localStorage.getItem('user');\r\n\r\n    if (token && validateToken(token) && user) {\r\n      try {\r\n        safeSetState({\r\n          user: JSON.parse(user),\r\n          isAuthenticated: true\r\n        });\r\n        fetchCurrentUser();\r\n      } catch (e) {\r\n        console.error('Ошибка инициализации:', e);\r\n        logout();\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  // Регистрация (обновлённая версия)\r\n  const register = async (name, email, password) => {\r\n    safeSetState({ isLoading: true, error: null });\r\n\r\n    try {\r\n      const response = await fetch(`${API_BASE_URL}/auth/register`, {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ name, email, password })\r\n      });\r\n\r\n      const data = await response.json();\r\n\r\n      if (!response.ok) {\r\n        throw new Error(data.message || 'Ошибка регистрации');\r\n      }\r\n\r\n      if (!data.user || !data.token) {\r\n        throw new Error('Сервер не вернул необходимые данные');\r\n      }\r\n\r\n      saveUserToStorage(data);\r\n      await fetchCart(data.user.id);\r\n      \r\n      return data;\r\n    } catch (error) {\r\n      safeSetState({ error: error.message });\r\n      throw error;\r\n    } finally {\r\n      safeSetState({ isLoading: false });\r\n    }\r\n  };\r\n\r\n  // Вход (обновлённая версия)\r\n  const login = async (email, password) => {\r\n    safeSetState({ isLoading: true, error: null });\r\n\r\n    try {\r\n      // Проверка админа\r\n      if (email === ADMIN_CREDENTIALS.email && password === ADMIN_CREDENTIALS.password) {\r\n        const adminData = {\r\n          user: {\r\n            id: 'admin-1',\r\n            name: 'Admin',\r\n            email: ADMIN_CREDENTIALS.email,\r\n            isAdmin: true\r\n          },\r\n          token: 'mock-admin-token'\r\n        };\r\n        saveUserToStorage(adminData);\r\n        return adminData;\r\n      }\r\n\r\n      // Обычный пользователь\r\n      const response = await fetch(`${API_BASE_URL}/auth/login`, {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ email, password })\r\n      });\r\n\r\n      const data = await response.json();\r\n\r\n      if (!response.ok) {\r\n        throw new Error(data.message || 'Ошибка входа');\r\n      }\r\n\r\n      if (!data.user || !data.token) {\r\n        throw new Error('Сервер не вернул необходимые данные');\r\n      }\r\n\r\n      saveUserToStorage(data);\r\n      await fetchCart(data.user.id);\r\n      \r\n      return data;\r\n    } catch (error) {\r\n      safeSetState({ error: error.message });\r\n      throw error;\r\n    } finally {\r\n      safeSetState({ isLoading: false });\r\n    }\r\n  };\r\n\r\n  // Остальные методы (fetchCart, saveCart, addToCart и т.д.) остаются без изменений\r\n\r\n return (\r\n    <CartContext.Provider\r\n      value={{\r\n        cartItems: state.cartItems,\r\n        cartCount: state.cartItems.reduce((sum, item) => sum + item.quantity, 0),\r\n        addToCart,\r\n        removeFromCart,\r\n        updateQuantity,\r\n        user: state.user,\r\n        isAuthenticated: state.isAuthenticated,\r\n        isLoading: state.isLoading,\r\n        error: state.error,\r\n        login,\r\n        logout,\r\n        register,\r\n        isAdmin: () => state.user?.isAdmin === true,\r\n        fetchCurrentUser\r\n      }}\r\n    >\r\n      {children}\r\n    </CartContext.Provider>\r\n  );\r\n}\r\n\r\nexport const useCart = () => {\r\n  const context = useContext(CartContext);\r\n  if (!context) {\r\n    throw new Error('useCart должен использоваться внутри CartProvider');\r\n  }\r\n  return context;\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}