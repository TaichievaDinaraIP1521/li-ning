{"ast":null,"code":"const handleSubmit = async e => {\n  e.preventDefault();\n  setError('');\n  if (!isLogin) {\n    if (!formData.name.trim()) {\n      setError('Введите имя');\n      return;\n    }\n    if (formData.password !== formData.confirmPassword) {\n      setError('Пароли не совпадают');\n      return;\n    }\n    if (formData.password.length < 6) {\n      setError('Пароль должен содержать минимум 6 символов');\n      return;\n    }\n  }\n  if (!formData.email || !formData.password) {\n    setError('Заполните все обязательные поля');\n    return;\n  }\n  setIsLoading(true);\n  try {\n    let userData;\n    if (isLogin) {\n      userData = await login(formData.email, formData.password);\n    } else {\n      userData = await register(formData.name, formData.email, formData.password);\n    }\n\n    // Проверяем isAdmin из возвращенных данных\n    if (userData.isAdmin) {\n      toast.success('Вы вошли как администратор!');\n      navigate('/admin');\n    } else {\n      toast.success(isLogin ? 'Вход выполнен успешно!' : 'Регистрация прошла успешно!');\n      navigate('/profile');\n    }\n  } catch (err) {\n    setError(err.message || 'Произошла ошибка');\n    toast.error(err.message || 'Произошла ошибка');\n  } finally {\n    setIsLoading(false);\n  }\n};","map":{"version":3,"names":["handleSubmit","e","preventDefault","setError","isLogin","formData","name","trim","password","confirmPassword","length","email","setIsLoading","userData","login","register","isAdmin","toast","success","navigate","err","message","error"],"sources":["C:/Users/dinat/OneDrive/Рабочий стол/lining/client/src/pages/Auth.js"],"sourcesContent":["const handleSubmit = async (e) => {\r\n  e.preventDefault();\r\n  setError('');\r\n  \r\n  if (!isLogin) {\r\n    if (!formData.name.trim()) {\r\n      setError('Введите имя');\r\n      return;\r\n    }\r\n    if (formData.password !== formData.confirmPassword) {\r\n      setError('Пароли не совпадают');\r\n      return;\r\n    }\r\n    if (formData.password.length < 6) {\r\n      setError('Пароль должен содержать минимум 6 символов');\r\n      return;\r\n    }\r\n  }\r\n\r\n  if (!formData.email || !formData.password) {\r\n    setError('Заполните все обязательные поля');\r\n    return;\r\n  }\r\n\r\n  setIsLoading(true);\r\n\r\n  try {\r\n    let userData;\r\n    if (isLogin) {\r\n      userData = await login(formData.email, formData.password);\r\n    } else {\r\n      userData = await register(formData.name, formData.email, formData.password);\r\n    }\r\n\r\n    // Проверяем isAdmin из возвращенных данных\r\n    if (userData.isAdmin) {\r\n      toast.success('Вы вошли как администратор!');\r\n      navigate('/admin');\r\n    } else {\r\n      toast.success(isLogin ? 'Вход выполнен успешно!' : 'Регистрация прошла успешно!');\r\n      navigate('/profile');\r\n    }\r\n  } catch (err) {\r\n    setError(err.message || 'Произошла ошибка');\r\n    toast.error(err.message || 'Произошла ошибка');\r\n  } finally {\r\n    setIsLoading(false);\r\n  }\r\n};"],"mappings":"AAAA,MAAMA,YAAY,GAAG,MAAOC,CAAC,IAAK;EAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;EAClBC,QAAQ,CAAC,EAAE,CAAC;EAEZ,IAAI,CAACC,OAAO,EAAE;IACZ,IAAI,CAACC,QAAQ,CAACC,IAAI,CAACC,IAAI,CAAC,CAAC,EAAE;MACzBJ,QAAQ,CAAC,aAAa,CAAC;MACvB;IACF;IACA,IAAIE,QAAQ,CAACG,QAAQ,KAAKH,QAAQ,CAACI,eAAe,EAAE;MAClDN,QAAQ,CAAC,qBAAqB,CAAC;MAC/B;IACF;IACA,IAAIE,QAAQ,CAACG,QAAQ,CAACE,MAAM,GAAG,CAAC,EAAE;MAChCP,QAAQ,CAAC,4CAA4C,CAAC;MACtD;IACF;EACF;EAEA,IAAI,CAACE,QAAQ,CAACM,KAAK,IAAI,CAACN,QAAQ,CAACG,QAAQ,EAAE;IACzCL,QAAQ,CAAC,iCAAiC,CAAC;IAC3C;EACF;EAEAS,YAAY,CAAC,IAAI,CAAC;EAElB,IAAI;IACF,IAAIC,QAAQ;IACZ,IAAIT,OAAO,EAAE;MACXS,QAAQ,GAAG,MAAMC,KAAK,CAACT,QAAQ,CAACM,KAAK,EAAEN,QAAQ,CAACG,QAAQ,CAAC;IAC3D,CAAC,MAAM;MACLK,QAAQ,GAAG,MAAME,QAAQ,CAACV,QAAQ,CAACC,IAAI,EAAED,QAAQ,CAACM,KAAK,EAAEN,QAAQ,CAACG,QAAQ,CAAC;IAC7E;;IAEA;IACA,IAAIK,QAAQ,CAACG,OAAO,EAAE;MACpBC,KAAK,CAACC,OAAO,CAAC,6BAA6B,CAAC;MAC5CC,QAAQ,CAAC,QAAQ,CAAC;IACpB,CAAC,MAAM;MACLF,KAAK,CAACC,OAAO,CAACd,OAAO,GAAG,wBAAwB,GAAG,6BAA6B,CAAC;MACjFe,QAAQ,CAAC,UAAU,CAAC;IACtB;EACF,CAAC,CAAC,OAAOC,GAAG,EAAE;IACZjB,QAAQ,CAACiB,GAAG,CAACC,OAAO,IAAI,kBAAkB,CAAC;IAC3CJ,KAAK,CAACK,KAAK,CAACF,GAAG,CAACC,OAAO,IAAI,kBAAkB,CAAC;EAChD,CAAC,SAAS;IACRT,YAAY,CAAC,KAAK,CAAC;EACrB;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}