{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dinat\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\lining\\\\client\\\\src\\\\context\\\\CartContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { createContext, useState, useContext, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CartContext = /*#__PURE__*/createContext();\nexport const CartProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [users, setUsers] = useState([{\n    name: 'Администратор',\n    email: 'admin1@mail.ru',\n    password: 'admin12341234',\n    isAdmin: true\n  }]);\n  const fetchCurrentUser = async () => {\n    return new Promise(resolve => {\n      setTimeout(() => {\n        resolve(user);\n      }, 500);\n    });\n  };\n  const login = async (email, password) => {\n    const foundUser = users.find(user => user.email === email && user.password === password);\n    if (foundUser) {\n      const userData = {\n        name: foundUser.name,\n        email: foundUser.email,\n        isAdmin: foundUser.isAdmin || false\n      };\n      setUser(userData);\n      return userData; // Важно: возвращаем данные пользователя\n    }\n    throw new Error('Неверные email или пароль');\n  };\n  const register = async (name, email, password) => {\n    const emailExists = users.some(user => user.email === email);\n    if (emailExists) {\n      throw new Error('Пользователь с таким email уже существует');\n    }\n    const newUser = {\n      name,\n      email,\n      password,\n      isAdmin: false\n    };\n    setUsers(prev => [...prev, newUser]);\n    const userData = {\n      name,\n      email,\n      isAdmin: false\n    };\n    setUser(userData);\n    return userData;\n  };\n  const logout = () => {\n    setUser(null);\n  };\n  const isAdmin = (userToCheck = user) => {\n    return (userToCheck === null || userToCheck === void 0 ? void 0 : userToCheck.isAdmin) === true;\n  };\n  useEffect(() => {\n    const checkAuth = async () => {\n      try {\n        const currentUser = await fetchCurrentUser();\n        if (currentUser) {\n          setUser(currentUser);\n        }\n      } catch (error) {\n        console.error('Ошибка проверки авторизации:', error);\n      }\n    };\n    checkAuth();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: {\n      user,\n      login,\n      register,\n      logout,\n      isAdmin,\n      fetchCurrentUser\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n};\n_s(CartProvider, \"q4ZJYS+phf6I4AyDmBl9eydNj1U=\");\n_c = CartProvider;\nexport const useCart = () => {\n  _s2();\n  return useContext(CartContext);\n};\n_s2(useCart, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["createContext","useState","useContext","useEffect","jsxDEV","_jsxDEV","CartContext","CartProvider","children","_s","user","setUser","users","setUsers","name","email","password","isAdmin","fetchCurrentUser","Promise","resolve","setTimeout","login","foundUser","find","userData","Error","register","emailExists","some","newUser","prev","logout","userToCheck","checkAuth","currentUser","error","console","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useCart","_s2","$RefreshReg$"],"sources":["C:/Users/dinat/OneDrive/Рабочий стол/lining/client/src/context/CartContext.js"],"sourcesContent":["import { createContext, useState, useContext, useEffect } from 'react';\r\n\r\nconst CartContext = createContext();\r\n\r\nexport const CartProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [users, setUsers] = useState([\r\n    {\r\n      name: 'Администратор',\r\n      email: 'admin1@mail.ru',\r\n      password: 'admin12341234',\r\n      isAdmin: true\r\n    }\r\n  ]);\r\n\r\n  const fetchCurrentUser = async () => {\r\n    return new Promise((resolve) => {\r\n      setTimeout(() => {\r\n        resolve(user);\r\n      }, 500);\r\n    });\r\n  };\r\n\r\n  const login = async (email, password) => {\r\n    const foundUser = users.find(user => \r\n      user.email === email && user.password === password\r\n    );\r\n\r\n    if (foundUser) {\r\n      const userData = {\r\n        name: foundUser.name,\r\n        email: foundUser.email,\r\n        isAdmin: foundUser.isAdmin || false\r\n      };\r\n      setUser(userData);\r\n      return userData; // Важно: возвращаем данные пользователя\r\n    }\r\n    \r\n    throw new Error('Неверные email или пароль');\r\n  };\r\n\r\n  const register = async (name, email, password) => {\r\n    const emailExists = users.some(user => user.email === email);\r\n    if (emailExists) {\r\n      throw new Error('Пользователь с таким email уже существует');\r\n    }\r\n\r\n    const newUser = {\r\n      name,\r\n      email,\r\n      password,\r\n      isAdmin: false\r\n    };\r\n\r\n    setUsers(prev => [...prev, newUser]);\r\n\r\n    const userData = {\r\n      name,\r\n      email,\r\n      isAdmin: false\r\n    };\r\n    setUser(userData);\r\n    \r\n    return userData;\r\n  };\r\n\r\n  const logout = () => {\r\n    setUser(null);\r\n  };\r\n\r\n  const isAdmin = (userToCheck = user) => {\r\n    return userToCheck?.isAdmin === true;\r\n  };\r\n\r\n  useEffect(() => {\r\n    const checkAuth = async () => {\r\n      try {\r\n        const currentUser = await fetchCurrentUser();\r\n        if (currentUser) {\r\n          setUser(currentUser);\r\n        }\r\n      } catch (error) {\r\n        console.error('Ошибка проверки авторизации:', error);\r\n      }\r\n    };\r\n\r\n    checkAuth();\r\n  }, []);\r\n\r\n  return (\r\n    <CartContext.Provider value={{ \r\n      user, \r\n      login, \r\n      register, \r\n      logout, \r\n      isAdmin,\r\n      fetchCurrentUser\r\n    }}>\r\n      {children}\r\n    </CartContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useCart = () => useContext(CartContext);"],"mappings":";;;AAAA,SAASA,aAAa,EAAEC,QAAQ,EAAEC,UAAU,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvE,MAAMC,WAAW,gBAAGN,aAAa,CAAC,CAAC;AAEnC,OAAO,MAAMO,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACW,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,CACjC;IACEa,IAAI,EAAE,eAAe;IACrBC,KAAK,EAAE,gBAAgB;IACvBC,QAAQ,EAAE,eAAe;IACzBC,OAAO,EAAE;EACX,CAAC,CACF,CAAC;EAEF,MAAMC,gBAAgB,GAAG,MAAAA,CAAA,KAAY;IACnC,OAAO,IAAIC,OAAO,CAAEC,OAAO,IAAK;MAC9BC,UAAU,CAAC,MAAM;QACfD,OAAO,CAACV,IAAI,CAAC;MACf,CAAC,EAAE,GAAG,CAAC;IACT,CAAC,CAAC;EACJ,CAAC;EAED,MAAMY,KAAK,GAAG,MAAAA,CAAOP,KAAK,EAAEC,QAAQ,KAAK;IACvC,MAAMO,SAAS,GAAGX,KAAK,CAACY,IAAI,CAACd,IAAI,IAC/BA,IAAI,CAACK,KAAK,KAAKA,KAAK,IAAIL,IAAI,CAACM,QAAQ,KAAKA,QAC5C,CAAC;IAED,IAAIO,SAAS,EAAE;MACb,MAAME,QAAQ,GAAG;QACfX,IAAI,EAAES,SAAS,CAACT,IAAI;QACpBC,KAAK,EAAEQ,SAAS,CAACR,KAAK;QACtBE,OAAO,EAAEM,SAAS,CAACN,OAAO,IAAI;MAChC,CAAC;MACDN,OAAO,CAACc,QAAQ,CAAC;MACjB,OAAOA,QAAQ,CAAC,CAAC;IACnB;IAEA,MAAM,IAAIC,KAAK,CAAC,2BAA2B,CAAC;EAC9C,CAAC;EAED,MAAMC,QAAQ,GAAG,MAAAA,CAAOb,IAAI,EAAEC,KAAK,EAAEC,QAAQ,KAAK;IAChD,MAAMY,WAAW,GAAGhB,KAAK,CAACiB,IAAI,CAACnB,IAAI,IAAIA,IAAI,CAACK,KAAK,KAAKA,KAAK,CAAC;IAC5D,IAAIa,WAAW,EAAE;MACf,MAAM,IAAIF,KAAK,CAAC,2CAA2C,CAAC;IAC9D;IAEA,MAAMI,OAAO,GAAG;MACdhB,IAAI;MACJC,KAAK;MACLC,QAAQ;MACRC,OAAO,EAAE;IACX,CAAC;IAEDJ,QAAQ,CAACkB,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAED,OAAO,CAAC,CAAC;IAEpC,MAAML,QAAQ,GAAG;MACfX,IAAI;MACJC,KAAK;MACLE,OAAO,EAAE;IACX,CAAC;IACDN,OAAO,CAACc,QAAQ,CAAC;IAEjB,OAAOA,QAAQ;EACjB,CAAC;EAED,MAAMO,MAAM,GAAGA,CAAA,KAAM;IACnBrB,OAAO,CAAC,IAAI,CAAC;EACf,CAAC;EAED,MAAMM,OAAO,GAAGA,CAACgB,WAAW,GAAGvB,IAAI,KAAK;IACtC,OAAO,CAAAuB,WAAW,aAAXA,WAAW,uBAAXA,WAAW,CAAEhB,OAAO,MAAK,IAAI;EACtC,CAAC;EAEDd,SAAS,CAAC,MAAM;IACd,MAAM+B,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,MAAMC,WAAW,GAAG,MAAMjB,gBAAgB,CAAC,CAAC;QAC5C,IAAIiB,WAAW,EAAE;UACfxB,OAAO,CAACwB,WAAW,CAAC;QACtB;MACF,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;MACtD;IACF,CAAC;IAEDF,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,oBACE7B,OAAA,CAACC,WAAW,CAACgC,QAAQ;IAACC,KAAK,EAAE;MAC3B7B,IAAI;MACJY,KAAK;MACLK,QAAQ;MACRK,MAAM;MACNf,OAAO;MACPC;IACF,CAAE;IAAAV,QAAA,EACCA;EAAQ;IAAAgC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAAClC,EAAA,CAjGWF,YAAY;AAAAqC,EAAA,GAAZrC,YAAY;AAmGzB,OAAO,MAAMsC,OAAO,GAAGA,CAAA;EAAAC,GAAA;EAAA,OAAM5C,UAAU,CAACI,WAAW,CAAC;AAAA;AAACwC,GAAA,CAAxCD,OAAO;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}