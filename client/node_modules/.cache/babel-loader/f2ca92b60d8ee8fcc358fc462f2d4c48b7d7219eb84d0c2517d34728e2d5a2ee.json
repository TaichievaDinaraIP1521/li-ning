{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dinat\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\lining\\\\client\\\\src\\\\context\\\\CartContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { createContext, useContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CartContext = /*#__PURE__*/createContext();\nexport function CartProvider({\n  children\n}) {\n  _s();\n  const [cartItems, setCartItems] = useState([]);\n  const [user, setUser] = useState(null);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  // Загрузка корзины с сервера\n  const fetchCart = async userId => {\n    setIsLoading(true);\n    setError(null);\n    try {\n      const response = await fetch(`http://localhost:5000/api/cart/${userId}`, {\n        headers: {\n          'Authorization': `Bearer ${localStorage.getItem('token')}`\n        }\n      });\n      if (!response.ok) {\n        throw new Error('Ошибка загрузки корзины');\n      }\n      const data = await response.json();\n      setCartItems(data.items || []);\n    } catch (error) {\n      setError(error.message);\n      console.error('Ошибка загрузки корзины:', error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Сохранение корзины на сервер\n  const saveCart = async items => {\n    if (!user) return;\n    setIsLoading(true);\n    setError(null);\n    try {\n      const response = await fetch(`http://localhost:5000/api/cart/${user.id}`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${localStorage.getItem('token')}`\n        },\n        body: JSON.stringify({\n          items\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Ошибка сохранения корзины');\n      }\n    } catch (error) {\n      setError(error.message);\n      console.error('Ошибка сохранения корзины:', error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Добавление товара\n  const addToCart = async product => {\n    if (!user) return;\n    const existingItem = cartItems.find(item => item.productId === product.id);\n    let updatedCart;\n    if (existingItem) {\n      updatedCart = cartItems.map(item => item.productId === product.id ? {\n        ...item,\n        quantity: item.quantity + 1\n      } : item);\n    } else {\n      updatedCart = [...cartItems, {\n        ...product,\n        cartId: `${product.id}_${Date.now()}`,\n        quantity: 1\n      }];\n    }\n    setCartItems(updatedCart);\n    await saveCart(updatedCart);\n  };\n\n  // Удаление товара\n  const removeFromCart = async cartId => {\n    if (!user) return;\n    const updatedCart = cartItems.filter(item => item.cartId !== cartId);\n    setCartItems(updatedCart);\n    await saveCart(updatedCart);\n  };\n\n  // Обновление количества\n  const updateQuantity = async (cartId, newQuantity) => {\n    if (!user) return;\n    const updatedCart = cartItems.map(item => item.cartId === cartId ? {\n      ...item,\n      quantity: Math.max(1, newQuantity)\n    } : item);\n    setCartItems(updatedCart);\n    await saveCart(updatedCart);\n  };\n\n  // Вход\n  const login = userData => {\n    setUser(userData);\n    setIsAuthenticated(true);\n    fetchCart(userData.id);\n  };\n\n  // Выход\n  const logout = () => {\n    setUser(null);\n    setIsAuthenticated(false);\n    setCartItems([]);\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: {\n      cartItems,\n      cartCount: cartItems.reduce((sum, item) => sum + item.quantity, 0),\n      addToCart,\n      removeFromCart,\n      updateQuantity,\n      user,\n      isAuthenticated,\n      isLoading,\n      error,\n      login,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 130,\n    columnNumber: 5\n  }, this);\n}\n_s(CartProvider, \"BQKAalJfF/HFQS674V85K+9wD0A=\");\n_c = CartProvider;\nexport const useCart = () => {\n  _s2();\n  return useContext(CartContext);\n};\n_s2(useCart, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["createContext","useContext","useState","useEffect","jsxDEV","_jsxDEV","CartContext","CartProvider","children","_s","cartItems","setCartItems","user","setUser","isAuthenticated","setIsAuthenticated","isLoading","setIsLoading","error","setError","fetchCart","userId","response","fetch","headers","localStorage","getItem","ok","Error","data","json","items","message","console","saveCart","id","method","body","JSON","stringify","addToCart","product","existingItem","find","item","productId","updatedCart","map","quantity","cartId","Date","now","removeFromCart","filter","updateQuantity","newQuantity","Math","max","login","userData","logout","Provider","value","cartCount","reduce","sum","fileName","_jsxFileName","lineNumber","columnNumber","_c","useCart","_s2","$RefreshReg$"],"sources":["C:/Users/dinat/OneDrive/Рабочий стол/lining/client/src/context/CartContext.js"],"sourcesContent":["import { createContext, useContext, useState, useEffect } from 'react';\r\n\r\nconst CartContext = createContext();\r\n\r\nexport function CartProvider({ children }) {\r\n  const [cartItems, setCartItems] = useState([]);\r\n  const [user, setUser] = useState(null);\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  // Загрузка корзины с сервера\r\n  const fetchCart = async (userId) => {\r\n    setIsLoading(true);\r\n    setError(null);\r\n    try {\r\n      const response = await fetch(`http://localhost:5000/api/cart/${userId}`, {\r\n        headers: {\r\n          'Authorization': `Bearer ${localStorage.getItem('token')}`\r\n        }\r\n      });\r\n      \r\n      if (!response.ok) {\r\n        throw new Error('Ошибка загрузки корзины');\r\n      }\r\n      \r\n      const data = await response.json();\r\n      setCartItems(data.items || []);\r\n    } catch (error) {\r\n      setError(error.message);\r\n      console.error('Ошибка загрузки корзины:', error);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  // Сохранение корзины на сервер\r\n  const saveCart = async (items) => {\r\n    if (!user) return;\r\n    \r\n    setIsLoading(true);\r\n    setError(null);\r\n    try {\r\n      const response = await fetch(`http://localhost:5000/api/cart/${user.id}`, {\r\n        method: 'POST',\r\n        headers: { \r\n          'Content-Type': 'application/json',\r\n          'Authorization': `Bearer ${localStorage.getItem('token')}`\r\n        },\r\n        body: JSON.stringify({ items }),\r\n      });\r\n      \r\n      if (!response.ok) {\r\n        throw new Error('Ошибка сохранения корзины');\r\n      }\r\n    } catch (error) {\r\n      setError(error.message);\r\n      console.error('Ошибка сохранения корзины:', error);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  // Добавление товара\r\n  const addToCart = async (product) => {\r\n    if (!user) return;\r\n    \r\n    const existingItem = cartItems.find(item => item.productId === product.id);\r\n    let updatedCart;\r\n    \r\n    if (existingItem) {\r\n      updatedCart = cartItems.map(item => \r\n        item.productId === product.id \r\n          ? { ...item, quantity: item.quantity + 1 } \r\n          : item\r\n      );\r\n    } else {\r\n      updatedCart = [\r\n        ...cartItems,\r\n        {\r\n          ...product,\r\n          cartId: `${product.id}_${Date.now()}`,\r\n          quantity: 1\r\n        }\r\n      ];\r\n    }\r\n    \r\n    setCartItems(updatedCart);\r\n    await saveCart(updatedCart);\r\n  };\r\n\r\n  // Удаление товара\r\n  const removeFromCart = async (cartId) => {\r\n    if (!user) return;\r\n    \r\n    const updatedCart = cartItems.filter(item => item.cartId !== cartId);\r\n    setCartItems(updatedCart);\r\n    await saveCart(updatedCart);\r\n  };\r\n\r\n  // Обновление количества\r\n  const updateQuantity = async (cartId, newQuantity) => {\r\n    if (!user) return;\r\n    \r\n    const updatedCart = cartItems.map(item => \r\n      item.cartId === cartId \r\n        ? { ...item, quantity: Math.max(1, newQuantity) } \r\n        : item\r\n    );\r\n    \r\n    setCartItems(updatedCart);\r\n    await saveCart(updatedCart);\r\n  };\r\n\r\n  // Вход\r\n  const login = (userData) => {\r\n    setUser(userData);\r\n    setIsAuthenticated(true);\r\n    fetchCart(userData.id);\r\n  };\r\n\r\n  // Выход\r\n  const logout = () => {\r\n    setUser(null);\r\n    setIsAuthenticated(false);\r\n    setCartItems([]);\r\n  };\r\n\r\n  return (\r\n    <CartContext.Provider value={{\r\n      cartItems,\r\n      cartCount: cartItems.reduce((sum, item) => sum + item.quantity, 0),\r\n      addToCart,\r\n      removeFromCart,\r\n      updateQuantity,\r\n      user,\r\n      isAuthenticated,\r\n      isLoading,\r\n      error,\r\n      login,\r\n      logout\r\n    }}>\r\n      {children}\r\n    </CartContext.Provider>\r\n  );\r\n}\r\n\r\nexport const useCart = () => useContext(CartContext);"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}