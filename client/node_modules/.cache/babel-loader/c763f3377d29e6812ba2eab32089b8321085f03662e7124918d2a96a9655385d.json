{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dinat\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\lining\\\\src\\\\context\\\\CartContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useEffect, useState } from 'react';\nimport { auth, db } from '../firebase';\nimport { collection, doc, setDoc, getDoc, updateDoc } from 'firebase/firestore';\nimport { onAuthStateChanged } from 'firebase/auth';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CartContext = /*#__PURE__*/createContext();\nexport function CartProvider({\n  children\n}) {\n  _s();\n  const [cartItems, setCartItems] = useState([]);\n  const [user, setUser] = useState(null);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n\n  // Загрузка данных пользователя и корзины\n  useEffect(() => {\n    const unsubscribe = onAuthStateChanged(auth, async user => {\n      if (user) {\n        setUser(user);\n        setIsAuthenticated(true);\n        await loadCart(user.uid);\n      } else {\n        setUser(null);\n        setIsAuthenticated(false);\n        setCartItems([]);\n      }\n    });\n    return () => unsubscribe();\n  }, []);\n\n  // Загрузка корзины из Firestore\n  const loadCart = async userId => {\n    try {\n      const cartRef = doc(db, 'carts', userId);\n      const cartSnap = await getDoc(cartRef);\n      if (cartSnap.exists()) {\n        setCartItems(cartSnap.data().items || []);\n      }\n    } catch (error) {\n      console.error('Error loading cart:', error);\n    }\n  };\n\n  // Сохранение корзины в Firestore\n  const saveCart = async items => {\n    if (!user) return;\n    try {\n      const cartRef = doc(db, 'carts', user.uid);\n      await setDoc(cartRef, {\n        items\n      }, {\n        merge: true\n      });\n    } catch (error) {\n      console.error('Error saving cart:', error);\n    }\n  };\n\n  // Добавление товара в корзину\n  const addToCart = async product => {\n    const newItem = {\n      ...product,\n      cartId: `${product.id}_${Date.now()}`,\n      quantity: 1\n    };\n    const updatedCart = [...cartItems, newItem];\n    setCartItems(updatedCart);\n    await saveCart(updatedCart);\n  };\n\n  // Удаление товара из корзины\n  const removeFromCart = async cartId => {\n    const updatedCart = cartItems.filter(item => item.cartId !== cartId);\n    setCartItems(updatedCart);\n    await saveCart(updatedCart);\n  };\n\n  // Обновление количества товара\n  const updateQuantity = async (cartId, newQuantity) => {\n    const updatedCart = cartItems.map(item => item.cartId === cartId ? {\n      ...item,\n      quantity: newQuantity\n    } : item);\n    setCartItems(updatedCart);\n    await saveCart(updatedCart);\n  };\n\n  // Оформление заказа\n  const createOrder = async () => {\n    if (!user || cartItems.length === 0) return null;\n    try {\n      const order = {\n        id: `order_${Date.now()}`,\n        userId: user.uid,\n        items: cartItems,\n        total: cartItems.reduce((sum, item) => sum + item.price * item.quantity, 0),\n        createdAt: new Date().toISOString(),\n        status: 'pending'\n      };\n      const orderRef = doc(db, 'orders', order.id);\n      await setDoc(orderRef, order);\n\n      // Очищаем корзину после создания заказа\n      setCartItems([]);\n      await saveCart([]);\n      return order;\n    } catch (error) {\n      console.error('Error creating order:', error);\n      return null;\n    }\n  };\n\n  // Выход из системы\n  const logout = async () => {\n    try {\n      await auth.signOut();\n    } catch (error) {\n      console.error('Error logging out:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: {\n      cartItems,\n      cartCount: cartItems.reduce((count, item) => count + item.quantity, 0),\n      addToCart,\n      removeFromCart,\n      updateQuantity,\n      createOrder,\n      user,\n      isAuthenticated,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 121,\n    columnNumber: 5\n  }, this);\n}\n_s(CartProvider, \"sXdBPMOfNFyX7YWMk01ZcDPWQiU=\");\n_c = CartProvider;\nexport const useCart = () => {\n  _s2();\n  return useContext(CartContext);\n};\n_s2(useCart, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["React","createContext","useContext","useEffect","useState","auth","db","collection","doc","setDoc","getDoc","updateDoc","onAuthStateChanged","jsxDEV","_jsxDEV","CartContext","CartProvider","children","_s","cartItems","setCartItems","user","setUser","isAuthenticated","setIsAuthenticated","unsubscribe","loadCart","uid","userId","cartRef","cartSnap","exists","data","items","error","console","saveCart","merge","addToCart","product","newItem","cartId","id","Date","now","quantity","updatedCart","removeFromCart","filter","item","updateQuantity","newQuantity","map","createOrder","length","order","total","reduce","sum","price","createdAt","toISOString","status","orderRef","logout","signOut","Provider","value","cartCount","count","fileName","_jsxFileName","lineNumber","columnNumber","_c","useCart","_s2","$RefreshReg$"],"sources":["C:/Users/dinat/OneDrive/Рабочий стол/lining/src/context/CartContext.js"],"sourcesContent":["import React, { createContext, useContext, useEffect, useState } from 'react';\r\nimport { auth, db } from '../firebase';\r\nimport { collection, doc, setDoc, getDoc, updateDoc } from 'firebase/firestore';\r\nimport { onAuthStateChanged } from 'firebase/auth';\r\n\r\nconst CartContext = createContext();\r\n\r\nexport function CartProvider({ children }) {\r\n  const [cartItems, setCartItems] = useState([]);\r\n  const [user, setUser] = useState(null);\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n\r\n  // Загрузка данных пользователя и корзины\r\n  useEffect(() => {\r\n    const unsubscribe = onAuthStateChanged(auth, async (user) => {\r\n      if (user) {\r\n        setUser(user);\r\n        setIsAuthenticated(true);\r\n        await loadCart(user.uid);\r\n      } else {\r\n        setUser(null);\r\n        setIsAuthenticated(false);\r\n        setCartItems([]);\r\n      }\r\n    });\r\n    return () => unsubscribe();\r\n  }, []);\r\n\r\n  // Загрузка корзины из Firestore\r\n  const loadCart = async (userId) => {\r\n    try {\r\n      const cartRef = doc(db, 'carts', userId);\r\n      const cartSnap = await getDoc(cartRef);\r\n      if (cartSnap.exists()) {\r\n        setCartItems(cartSnap.data().items || []);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error loading cart:', error);\r\n    }\r\n  };\r\n\r\n  // Сохранение корзины в Firestore\r\n  const saveCart = async (items) => {\r\n    if (!user) return;\r\n    \r\n    try {\r\n      const cartRef = doc(db, 'carts', user.uid);\r\n      await setDoc(cartRef, { items }, { merge: true });\r\n    } catch (error) {\r\n      console.error('Error saving cart:', error);\r\n    }\r\n  };\r\n\r\n  // Добавление товара в корзину\r\n  const addToCart = async (product) => {\r\n    const newItem = {\r\n      ...product,\r\n      cartId: `${product.id}_${Date.now()}`,\r\n      quantity: 1\r\n    };\r\n    \r\n    const updatedCart = [...cartItems, newItem];\r\n    setCartItems(updatedCart);\r\n    await saveCart(updatedCart);\r\n  };\r\n\r\n  // Удаление товара из корзины\r\n  const removeFromCart = async (cartId) => {\r\n    const updatedCart = cartItems.filter(item => item.cartId !== cartId);\r\n    setCartItems(updatedCart);\r\n    await saveCart(updatedCart);\r\n  };\r\n\r\n  // Обновление количества товара\r\n  const updateQuantity = async (cartId, newQuantity) => {\r\n    const updatedCart = cartItems.map(item => \r\n      item.cartId === cartId ? { ...item, quantity: newQuantity } : item\r\n    );\r\n    setCartItems(updatedCart);\r\n    await saveCart(updatedCart);\r\n  };\r\n\r\n  // Оформление заказа\r\n  const createOrder = async () => {\r\n    if (!user || cartItems.length === 0) return null;\r\n    \r\n    try {\r\n      const order = {\r\n        id: `order_${Date.now()}`,\r\n        userId: user.uid,\r\n        items: cartItems,\r\n        total: cartItems.reduce((sum, item) => sum + (item.price * item.quantity), 0),\r\n        createdAt: new Date().toISOString(),\r\n        status: 'pending'\r\n      };\r\n      \r\n      const orderRef = doc(db, 'orders', order.id);\r\n      await setDoc(orderRef, order);\r\n      \r\n      // Очищаем корзину после создания заказа\r\n      setCartItems([]);\r\n      await saveCart([]);\r\n      \r\n      return order;\r\n    } catch (error) {\r\n      console.error('Error creating order:', error);\r\n      return null;\r\n    }\r\n  };\r\n\r\n  // Выход из системы\r\n  const logout = async () => {\r\n    try {\r\n      await auth.signOut();\r\n    } catch (error) {\r\n      console.error('Error logging out:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <CartContext.Provider value={{\r\n      cartItems,\r\n      cartCount: cartItems.reduce((count, item) => count + item.quantity, 0),\r\n      addToCart,\r\n      removeFromCart,\r\n      updateQuantity,\r\n      createOrder,\r\n      user,\r\n      isAuthenticated,\r\n      logout\r\n    }}>\r\n      {children}\r\n    </CartContext.Provider>\r\n  );\r\n}\r\n\r\nexport const useCart = () => useContext(CartContext);"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}