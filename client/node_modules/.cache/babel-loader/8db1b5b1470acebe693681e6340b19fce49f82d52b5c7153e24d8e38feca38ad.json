{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dinat\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\lining\\\\client\\\\src\\\\context\\\\CartContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { createContext, useContext, useState, useEffect, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_BASE_URL = 'http://localhost:5000/api';\nconst CartContext = /*#__PURE__*/createContext();\n\n// Данные администратора для тестирования\nconst ADMIN_CREDENTIALS = {\n  email: 'admin1@mail.ru',\n  password: 'admin12341234'\n};\nexport function CartProvider({\n  children\n}) {\n  _s();\n  const [state, setState] = useState({\n    cartItems: [],\n    user: JSON.parse(localStorage.getItem('user')) || null,\n    isAuthenticated: !!localStorage.getItem('user'),\n    isLoading: false,\n    error: null\n  });\n  const isMounted = useRef(true);\n  useEffect(() => {\n    return () => {\n      isMounted.current = false;\n    };\n  }, []);\n  const safeSetState = newState => {\n    if (isMounted.current) {\n      setState(prev => ({\n        ...prev,\n        ...newState\n      }));\n    }\n  };\n  useEffect(() => {\n    const storedUser = localStorage.getItem('user');\n    if (storedUser) {\n      try {\n        const parsedUser = JSON.parse(storedUser);\n        safeSetState({\n          user: parsedUser,\n          isAuthenticated: true\n        });\n        fetchCart(parsedUser.id);\n      } catch (e) {\n        console.error('Ошибка парсинга пользователя', e);\n      }\n    }\n  }, []);\n\n  // Регистрация нового пользователя\n  const register = async (name, email, password) => {\n    safeSetState({\n      isLoading: true,\n      error: null\n    });\n    try {\n      const response = await fetch(`${API_BASE_URL}/auth/register`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          name,\n          email,\n          password\n        })\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.message || 'Ошибка регистрации');\n      }\n      const userData = await response.json();\n      localStorage.setItem('user', JSON.stringify(userData));\n      localStorage.setItem('token', userData.token);\n      safeSetState({\n        user: userData,\n        isAuthenticated: true,\n        error: null\n      });\n      await fetchCart(userData.id);\n      return userData;\n    } catch (error) {\n      safeSetState({\n        error: error.message\n      });\n      throw error;\n    } finally {\n      safeSetState({\n        isLoading: false\n      });\n    }\n  };\n\n  // Вход пользователя\n  const login = async (email, password) => {\n    safeSetState({\n      isLoading: true,\n      error: null\n    });\n    try {\n      // Проверка на администратора\n      if (email === ADMIN_CREDENTIALS.email && password === ADMIN_CREDENTIALS.password) {\n        const adminUser = {\n          id: 'admin-1',\n          name: 'Admin',\n          email: ADMIN_CREDENTIALS.email,\n          isAdmin: true,\n          token: 'mock-admin-token',\n          avatar: 'https://i.pravatar.cc/150?u=admin'\n        };\n        localStorage.setItem('user', JSON.stringify(adminUser));\n        localStorage.setItem('token', adminUser.token);\n        safeSetState({\n          user: adminUser,\n          isAuthenticated: true\n        });\n        return adminUser;\n      }\n\n      // Обычный пользователь\n      const response = await fetch(`${API_BASE_URL}/auth/login`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email,\n          password\n        })\n      });\n      if (!response.ok) throw new Error('Ошибка входа');\n      const userData = await response.json();\n      localStorage.setItem('user', JSON.stringify(userData));\n      localStorage.setItem('token', userData.token);\n      safeSetState({\n        user: userData,\n        isAuthenticated: true\n      });\n      await fetchCart(userData.id);\n      return userData;\n    } catch (error) {\n      safeSetState({\n        error: error.message\n      });\n      throw error;\n    } finally {\n      safeSetState({\n        isLoading: false\n      });\n    }\n  };\n\n  // Выход из аккаунта\n  const logout = () => {\n    localStorage.removeItem('user');\n    localStorage.removeItem('token');\n    safeSetState({\n      user: null,\n      isAuthenticated: false,\n      cartItems: []\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: {\n      cartItems: state.cartItems,\n      cartCount: state.cartItems.reduce((sum, item) => sum + item.quantity, 0),\n      addToCart,\n      removeFromCart,\n      updateQuantity,\n      user: state.user,\n      isAuthenticated: state.isAuthenticated,\n      isLoading: state.isLoading,\n      error: state.error,\n      login,\n      logout,\n      isAdmin: () => {\n        var _state$user;\n        return ((_state$user = state.user) === null || _state$user === void 0 ? void 0 : _state$user.isAdmin) === true;\n      }\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 144,\n    columnNumber: 5\n  }, this);\n}\n_s(CartProvider, \"cCTeucHHgBkU3mSgEVKb5wp1gCA=\");\n_c = CartProvider;\nexport const useCart = () => {\n  _s2();\n  const context = useContext(CartContext);\n  if (!context) {\n    throw new Error('useCart must be used within a CartProvider');\n  }\n  return context;\n};\n_s2(useCart, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["createContext","useContext","useState","useEffect","useRef","jsxDEV","_jsxDEV","API_BASE_URL","CartContext","ADMIN_CREDENTIALS","email","password","CartProvider","children","_s","state","setState","cartItems","user","JSON","parse","localStorage","getItem","isAuthenticated","isLoading","error","isMounted","current","safeSetState","newState","prev","storedUser","parsedUser","fetchCart","id","e","console","register","name","response","fetch","method","headers","body","stringify","ok","errorData","json","Error","message","userData","setItem","token","login","adminUser","isAdmin","avatar","logout","removeItem","Provider","value","cartCount","reduce","sum","item","quantity","addToCart","removeFromCart","updateQuantity","_state$user","fileName","_jsxFileName","lineNumber","columnNumber","_c","useCart","_s2","context","$RefreshReg$"],"sources":["C:/Users/dinat/OneDrive/Рабочий стол/lining/client/src/context/CartContext.js"],"sourcesContent":["import { createContext, useContext, useState, useEffect, useRef } from 'react';\r\n\r\nconst API_BASE_URL = 'http://localhost:5000/api';\r\nconst CartContext = createContext();\r\n\r\n// Данные администратора для тестирования\r\nconst ADMIN_CREDENTIALS = {\r\n  email: 'admin1@mail.ru',\r\n  password: 'admin12341234'\r\n};\r\n\r\nexport function CartProvider({ children }) {\r\n  const [state, setState] = useState({\r\n    cartItems: [],\r\n    user: JSON.parse(localStorage.getItem('user')) || null,\r\n    isAuthenticated: !!localStorage.getItem('user'),\r\n    isLoading: false,\r\n    error: null\r\n  });\r\n\r\n  const isMounted = useRef(true);\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      isMounted.current = false;\r\n    };\r\n  }, []);\r\n\r\n  const safeSetState = (newState) => {\r\n    if (isMounted.current) {\r\n      setState(prev => ({ ...prev, ...newState }));\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const storedUser = localStorage.getItem('user');\r\n    if (storedUser) {\r\n      try {\r\n        const parsedUser = JSON.parse(storedUser);\r\n        safeSetState({ user: parsedUser, isAuthenticated: true });\r\n        fetchCart(parsedUser.id);\r\n      } catch (e) {\r\n        console.error('Ошибка парсинга пользователя', e);\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  // Регистрация нового пользователя\r\n  const register = async (name, email, password) => {\r\n    safeSetState({ isLoading: true, error: null });\r\n    try {\r\n      const response = await fetch(`${API_BASE_URL}/auth/register`, {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ name, email, password })\r\n      });\r\n\r\n      if (!response.ok) {\r\n        const errorData = await response.json();\r\n        throw new Error(errorData.message || 'Ошибка регистрации');\r\n      }\r\n\r\n      const userData = await response.json();\r\n      localStorage.setItem('user', JSON.stringify(userData));\r\n      localStorage.setItem('token', userData.token);\r\n      safeSetState({\r\n        user: userData,\r\n        isAuthenticated: true,\r\n        error: null\r\n      });\r\n      await fetchCart(userData.id);\r\n      return userData;\r\n    } catch (error) {\r\n      safeSetState({ error: error.message });\r\n      throw error;\r\n    } finally {\r\n      safeSetState({ isLoading: false });\r\n    }\r\n  };\r\n\r\n  // Вход пользователя\r\n  const login = async (email, password) => {\r\n    safeSetState({ isLoading: true, error: null });\r\n    try {\r\n      // Проверка на администратора\r\n      if (email === ADMIN_CREDENTIALS.email && password === ADMIN_CREDENTIALS.password) {\r\n        const adminUser = {\r\n          id: 'admin-1',\r\n          name: 'Admin',\r\n          email: ADMIN_CREDENTIALS.email,\r\n          isAdmin: true,\r\n          token: 'mock-admin-token',\r\n          avatar: 'https://i.pravatar.cc/150?u=admin'\r\n        };\r\n        \r\n        localStorage.setItem('user', JSON.stringify(adminUser));\r\n        localStorage.setItem('token', adminUser.token);\r\n        safeSetState({\r\n          user: adminUser,\r\n          isAuthenticated: true\r\n        });\r\n        return adminUser;\r\n      }\r\n\r\n      // Обычный пользователь\r\n      const response = await fetch(`${API_BASE_URL}/auth/login`, {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ email, password })\r\n      });\r\n\r\n      if (!response.ok) throw new Error('Ошибка входа');\r\n\r\n      const userData = await response.json();\r\n      localStorage.setItem('user', JSON.stringify(userData));\r\n      localStorage.setItem('token', userData.token);\r\n      safeSetState({\r\n        user: userData,\r\n        isAuthenticated: true\r\n      });\r\n      await fetchCart(userData.id);\r\n      return userData;\r\n    } catch (error) {\r\n      safeSetState({ error: error.message });\r\n      throw error;\r\n    } finally {\r\n      safeSetState({ isLoading: false });\r\n    }\r\n  };\r\n\r\n  // Выход из аккаунта\r\n  const logout = () => {\r\n    localStorage.removeItem('user');\r\n    localStorage.removeItem('token');\r\n\r\n    safeSetState({\r\n      user: null,\r\n      isAuthenticated: false,\r\n      cartItems: []\r\n    });\r\n  };\r\n\r\n  return (\r\n    <CartContext.Provider\r\n      value={{\r\n        cartItems: state.cartItems,\r\n        cartCount: state.cartItems.reduce((sum, item) => sum + item.quantity, 0),\r\n        addToCart,\r\n        removeFromCart,\r\n        updateQuantity,\r\n        user: state.user,\r\n        isAuthenticated: state.isAuthenticated,\r\n        isLoading: state.isLoading,\r\n        error: state.error,\r\n        login,\r\n        logout,\r\n        isAdmin: () => state.user?.isAdmin === true\r\n      }}\r\n    >\r\n      {children}\r\n    </CartContext.Provider>\r\n  );\r\n}\r\n\r\nexport const useCart = () => {\r\n  const context = useContext(CartContext);\r\n  if (!context) {\r\n    throw new Error('useCart must be used within a CartProvider');\r\n  }\r\n  return context;\r\n};"],"mappings":";;;AAAA,SAASA,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/E,MAAMC,YAAY,GAAG,2BAA2B;AAChD,MAAMC,WAAW,gBAAGR,aAAa,CAAC,CAAC;;AAEnC;AACA,MAAMS,iBAAiB,GAAG;EACxBC,KAAK,EAAE,gBAAgB;EACvBC,QAAQ,EAAE;AACZ,CAAC;AAED,OAAO,SAASC,YAAYA,CAAC;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EACzC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAAC;IACjCe,SAAS,EAAE,EAAE;IACbC,IAAI,EAAEC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC,IAAI,IAAI;IACtDC,eAAe,EAAE,CAAC,CAACF,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;IAC/CE,SAAS,EAAE,KAAK;IAChBC,KAAK,EAAE;EACT,CAAC,CAAC;EAEF,MAAMC,SAAS,GAAGtB,MAAM,CAAC,IAAI,CAAC;EAE9BD,SAAS,CAAC,MAAM;IACd,OAAO,MAAM;MACXuB,SAAS,CAACC,OAAO,GAAG,KAAK;IAC3B,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,YAAY,GAAIC,QAAQ,IAAK;IACjC,IAAIH,SAAS,CAACC,OAAO,EAAE;MACrBX,QAAQ,CAACc,IAAI,KAAK;QAAE,GAAGA,IAAI;QAAE,GAAGD;MAAS,CAAC,CAAC,CAAC;IAC9C;EACF,CAAC;EAED1B,SAAS,CAAC,MAAM;IACd,MAAM4B,UAAU,GAAGV,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;IAC/C,IAAIS,UAAU,EAAE;MACd,IAAI;QACF,MAAMC,UAAU,GAAGb,IAAI,CAACC,KAAK,CAACW,UAAU,CAAC;QACzCH,YAAY,CAAC;UAAEV,IAAI,EAAEc,UAAU;UAAET,eAAe,EAAE;QAAK,CAAC,CAAC;QACzDU,SAAS,CAACD,UAAU,CAACE,EAAE,CAAC;MAC1B,CAAC,CAAC,OAAOC,CAAC,EAAE;QACVC,OAAO,CAACX,KAAK,CAAC,8BAA8B,EAAEU,CAAC,CAAC;MAClD;IACF;EACF,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAME,QAAQ,GAAG,MAAAA,CAAOC,IAAI,EAAE5B,KAAK,EAAEC,QAAQ,KAAK;IAChDiB,YAAY,CAAC;MAAEJ,SAAS,EAAE,IAAI;MAAEC,KAAK,EAAE;IAAK,CAAC,CAAC;IAC9C,IAAI;MACF,MAAMc,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGjC,YAAY,gBAAgB,EAAE;QAC5DkC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,IAAI,EAAExB,IAAI,CAACyB,SAAS,CAAC;UAAEN,IAAI;UAAE5B,KAAK;UAAEC;QAAS,CAAC;MAChD,CAAC,CAAC;MAEF,IAAI,CAAC4B,QAAQ,CAACM,EAAE,EAAE;QAChB,MAAMC,SAAS,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;QACvC,MAAM,IAAIC,KAAK,CAACF,SAAS,CAACG,OAAO,IAAI,oBAAoB,CAAC;MAC5D;MAEA,MAAMC,QAAQ,GAAG,MAAMX,QAAQ,CAACQ,IAAI,CAAC,CAAC;MACtC1B,YAAY,CAAC8B,OAAO,CAAC,MAAM,EAAEhC,IAAI,CAACyB,SAAS,CAACM,QAAQ,CAAC,CAAC;MACtD7B,YAAY,CAAC8B,OAAO,CAAC,OAAO,EAAED,QAAQ,CAACE,KAAK,CAAC;MAC7CxB,YAAY,CAAC;QACXV,IAAI,EAAEgC,QAAQ;QACd3B,eAAe,EAAE,IAAI;QACrBE,KAAK,EAAE;MACT,CAAC,CAAC;MACF,MAAMQ,SAAS,CAACiB,QAAQ,CAAChB,EAAE,CAAC;MAC5B,OAAOgB,QAAQ;IACjB,CAAC,CAAC,OAAOzB,KAAK,EAAE;MACdG,YAAY,CAAC;QAAEH,KAAK,EAAEA,KAAK,CAACwB;MAAQ,CAAC,CAAC;MACtC,MAAMxB,KAAK;IACb,CAAC,SAAS;MACRG,YAAY,CAAC;QAAEJ,SAAS,EAAE;MAAM,CAAC,CAAC;IACpC;EACF,CAAC;;EAED;EACA,MAAM6B,KAAK,GAAG,MAAAA,CAAO3C,KAAK,EAAEC,QAAQ,KAAK;IACvCiB,YAAY,CAAC;MAAEJ,SAAS,EAAE,IAAI;MAAEC,KAAK,EAAE;IAAK,CAAC,CAAC;IAC9C,IAAI;MACF;MACA,IAAIf,KAAK,KAAKD,iBAAiB,CAACC,KAAK,IAAIC,QAAQ,KAAKF,iBAAiB,CAACE,QAAQ,EAAE;QAChF,MAAM2C,SAAS,GAAG;UAChBpB,EAAE,EAAE,SAAS;UACbI,IAAI,EAAE,OAAO;UACb5B,KAAK,EAAED,iBAAiB,CAACC,KAAK;UAC9B6C,OAAO,EAAE,IAAI;UACbH,KAAK,EAAE,kBAAkB;UACzBI,MAAM,EAAE;QACV,CAAC;QAEDnC,YAAY,CAAC8B,OAAO,CAAC,MAAM,EAAEhC,IAAI,CAACyB,SAAS,CAACU,SAAS,CAAC,CAAC;QACvDjC,YAAY,CAAC8B,OAAO,CAAC,OAAO,EAAEG,SAAS,CAACF,KAAK,CAAC;QAC9CxB,YAAY,CAAC;UACXV,IAAI,EAAEoC,SAAS;UACf/B,eAAe,EAAE;QACnB,CAAC,CAAC;QACF,OAAO+B,SAAS;MAClB;;MAEA;MACA,MAAMf,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGjC,YAAY,aAAa,EAAE;QACzDkC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,IAAI,EAAExB,IAAI,CAACyB,SAAS,CAAC;UAAElC,KAAK;UAAEC;QAAS,CAAC;MAC1C,CAAC,CAAC;MAEF,IAAI,CAAC4B,QAAQ,CAACM,EAAE,EAAE,MAAM,IAAIG,KAAK,CAAC,cAAc,CAAC;MAEjD,MAAME,QAAQ,GAAG,MAAMX,QAAQ,CAACQ,IAAI,CAAC,CAAC;MACtC1B,YAAY,CAAC8B,OAAO,CAAC,MAAM,EAAEhC,IAAI,CAACyB,SAAS,CAACM,QAAQ,CAAC,CAAC;MACtD7B,YAAY,CAAC8B,OAAO,CAAC,OAAO,EAAED,QAAQ,CAACE,KAAK,CAAC;MAC7CxB,YAAY,CAAC;QACXV,IAAI,EAAEgC,QAAQ;QACd3B,eAAe,EAAE;MACnB,CAAC,CAAC;MACF,MAAMU,SAAS,CAACiB,QAAQ,CAAChB,EAAE,CAAC;MAC5B,OAAOgB,QAAQ;IACjB,CAAC,CAAC,OAAOzB,KAAK,EAAE;MACdG,YAAY,CAAC;QAAEH,KAAK,EAAEA,KAAK,CAACwB;MAAQ,CAAC,CAAC;MACtC,MAAMxB,KAAK;IACb,CAAC,SAAS;MACRG,YAAY,CAAC;QAAEJ,SAAS,EAAE;MAAM,CAAC,CAAC;IACpC;EACF,CAAC;;EAED;EACA,MAAMiC,MAAM,GAAGA,CAAA,KAAM;IACnBpC,YAAY,CAACqC,UAAU,CAAC,MAAM,CAAC;IAC/BrC,YAAY,CAACqC,UAAU,CAAC,OAAO,CAAC;IAEhC9B,YAAY,CAAC;MACXV,IAAI,EAAE,IAAI;MACVK,eAAe,EAAE,KAAK;MACtBN,SAAS,EAAE;IACb,CAAC,CAAC;EACJ,CAAC;EAED,oBACEX,OAAA,CAACE,WAAW,CAACmD,QAAQ;IACnBC,KAAK,EAAE;MACL3C,SAAS,EAAEF,KAAK,CAACE,SAAS;MAC1B4C,SAAS,EAAE9C,KAAK,CAACE,SAAS,CAAC6C,MAAM,CAAC,CAACC,GAAG,EAAEC,IAAI,KAAKD,GAAG,GAAGC,IAAI,CAACC,QAAQ,EAAE,CAAC,CAAC;MACxEC,SAAS;MACTC,cAAc;MACdC,cAAc;MACdlD,IAAI,EAAEH,KAAK,CAACG,IAAI;MAChBK,eAAe,EAAER,KAAK,CAACQ,eAAe;MACtCC,SAAS,EAAET,KAAK,CAACS,SAAS;MAC1BC,KAAK,EAAEV,KAAK,CAACU,KAAK;MAClB4B,KAAK;MACLI,MAAM;MACNF,OAAO,EAAEA,CAAA;QAAA,IAAAc,WAAA;QAAA,OAAM,EAAAA,WAAA,GAAAtD,KAAK,CAACG,IAAI,cAAAmD,WAAA,uBAAVA,WAAA,CAAYd,OAAO,MAAK,IAAI;MAAA;IAC7C,CAAE;IAAA1C,QAAA,EAEDA;EAAQ;IAAAyD,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B;AAAC3D,EAAA,CAvJeF,YAAY;AAAA8D,EAAA,GAAZ9D,YAAY;AAyJ5B,OAAO,MAAM+D,OAAO,GAAGA,CAAA,KAAM;EAAAC,GAAA;EAC3B,MAAMC,OAAO,GAAG5E,UAAU,CAACO,WAAW,CAAC;EACvC,IAAI,CAACqE,OAAO,EAAE;IACZ,MAAM,IAAI7B,KAAK,CAAC,4CAA4C,CAAC;EAC/D;EACA,OAAO6B,OAAO;AAChB,CAAC;AAACD,GAAA,CANWD,OAAO;AAAA,IAAAD,EAAA;AAAAI,YAAA,CAAAJ,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}