{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dinat\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\lining\\\\client\\\\src\\\\context\\\\CartContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\n// Создаём контекст\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CartContext = /*#__PURE__*/createContext();\n\n// Провайдер\nexport const CartProvider = ({\n  children\n}) => {\n  _s();\n  const [cart, setCart] = useState([]);\n  const [user, setUser] = useState(null);\n  const [isAdmin, setIsAdmin] = useState(false);\n  const [users, setUsers] = useState([{\n    id: 1,\n    name: 'Admin',\n    email: 'admin@example.com',\n    password: 'admin123',\n    isAdmin: true\n  }, {\n    id: 2,\n    name: 'User',\n    email: 'user@example.com',\n    password: 'user123',\n    isAdmin: false\n  }]);\n\n  // Загружаем пользователя из localStorage при старте\n  useEffect(() => {\n    const storedUser = localStorage.getItem('user');\n    if (storedUser) {\n      const parsedUser = JSON.parse(storedUser);\n      setUser(parsedUser);\n      setIsAdmin(parsedUser.isAdmin || false);\n    }\n\n    // Восстанавливаем корзину из localStorage\n    const savedCart = JSON.parse(localStorage.getItem('tempCart')) || [];\n    setCart(savedCart);\n  }, []);\n\n  // Функция входа\n  const login = async (email, password) => {\n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n        const foundUser = users.find(u => u.email.trim() === email.trim() && u.password.trim() === password.trim());\n        if (foundUser) {\n          setUser(foundUser);\n          setIsAdmin(foundUser.isAdmin);\n          localStorage.setItem('user', JSON.stringify(foundUser));\n          toast.success('Вы вошли!');\n          resolve(foundUser);\n        } else {\n          toast.error('Неверный email или пароль');\n          reject(new Error('Неверный email или пароль'));\n        }\n      }, 500);\n    });\n  };\n\n  // Функция регистрации\n  const register = async (name, email, password) => {\n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n        if (users.some(u => u.email.trim() === email.trim())) {\n          toast.warn('Пользователь с таким email уже существует');\n          reject(new Error('Пользователь с таким email уже существует'));\n          return;\n        }\n        if (password.length < 6) {\n          toast.warn('Пароль должен быть минимум 6 символов');\n          reject(new Error('Пароль должен быть минимум 6 символов'));\n          return;\n        }\n        const newUser = {\n          id: Date.now(),\n          name,\n          email,\n          password,\n          isAdmin: false\n        };\n        setUsers(prev => [...prev, newUser]);\n        setUser(newUser);\n        setIsAdmin(false);\n        localStorage.setItem('user', JSON.stringify(newUser));\n        toast.success('Регистрация успешна!');\n        resolve(newUser);\n      }, 500);\n    });\n  };\n\n  // Выход из аккаунта\n  const logout = () => {\n    setUser(null);\n    setIsAdmin(false);\n    localStorage.removeItem('user');\n    toast.info('Вы вышли из системы');\n  };\n\n  // Получение текущего пользователя (из localStorage)\n  const fetchCurrentUser = () => {\n    const storedUser = localStorage.getItem('user');\n    if (storedUser) {\n      const parsedUser = JSON.parse(storedUser);\n      setUser(parsedUser);\n      setIsAdmin(parsedUser.isAdmin || false);\n      return parsedUser;\n    }\n    return null;\n  };\n\n  // Добавление товара в корзину\n  const addToCart = product => {\n    setCart(prev => [...prev, product]);\n    toast.success(`${product.name} добавлен в корзину`);\n  };\n\n  // Удаление товара из корзины\n  const removeFromCart = productId => {\n    setCart(prev => prev.filter(item => item.id !== productId));\n    toast.info('Товар удален');\n  };\n\n  // Очистка корзины\n  const clearCart = () => {\n    setCart([]);\n    toast.success('Корзина очищена');\n  };\n\n  // Подсчёт товаров в корзине\n  const cartCount = cart.length;\n\n  // Сумма всех товаров\n  const cartTotal = cart.reduce((sum, item) => sum + item.price * item.quantity, 0);\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: {\n      cart,\n      user,\n      isAdmin,\n      cartCount,\n      cartTotal,\n      addToCart,\n      removeFromCart,\n      clearCart,\n      login,\n      register,\n      fetchCurrentUser,\n      // ✅ Передаём функцию\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 146,\n    columnNumber: 5\n  }, this);\n};\n\n// Хук для использования контекста\n_s(CartProvider, \"za3tktgSAtt2YjUCKYI8qBW9+P8=\");\n_c = CartProvider;\nexport const useCart = () => {\n  _s2();\n  return useContext(CartContext);\n};\n_s2(useCart, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","toast","jsxDEV","_jsxDEV","CartContext","CartProvider","children","_s","cart","setCart","user","setUser","isAdmin","setIsAdmin","users","setUsers","id","name","email","password","storedUser","localStorage","getItem","parsedUser","JSON","parse","savedCart","login","Promise","resolve","reject","setTimeout","foundUser","find","u","trim","setItem","stringify","success","error","Error","register","some","warn","length","newUser","Date","now","prev","logout","removeItem","info","fetchCurrentUser","addToCart","product","removeFromCart","productId","filter","item","clearCart","cartCount","cartTotal","reduce","sum","price","quantity","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useCart","_s2","$RefreshReg$"],"sources":["C:/Users/dinat/OneDrive/Рабочий стол/lining/client/src/context/CartContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\n// Создаём контекст\r\nexport const CartContext = createContext();\r\n\r\n// Провайдер\r\nexport const CartProvider = ({ children }) => {\r\n  const [cart, setCart] = useState([]);\r\n  const [user, setUser] = useState(null);\r\n  const [isAdmin, setIsAdmin] = useState(false);\r\n\r\n  const [users, setUsers] = useState([\r\n    {\r\n      id: 1,\r\n      name: 'Admin',\r\n      email: 'admin@example.com',\r\n      password: 'admin123',\r\n      isAdmin: true\r\n    },\r\n    {\r\n      id: 2,\r\n      name: 'User',\r\n      email: 'user@example.com',\r\n      password: 'user123',\r\n      isAdmin: false\r\n    }\r\n  ]);\r\n\r\n  // Загружаем пользователя из localStorage при старте\r\n  useEffect(() => {\r\n    const storedUser = localStorage.getItem('user');\r\n    if (storedUser) {\r\n      const parsedUser = JSON.parse(storedUser);\r\n      setUser(parsedUser);\r\n      setIsAdmin(parsedUser.isAdmin || false);\r\n    }\r\n\r\n    // Восстанавливаем корзину из localStorage\r\n    const savedCart = JSON.parse(localStorage.getItem('tempCart')) || [];\r\n    setCart(savedCart);\r\n  }, []);\r\n\r\n  // Функция входа\r\n  const login = async (email, password) => {\r\n    return new Promise((resolve, reject) => {\r\n      setTimeout(() => {\r\n        const foundUser = users.find(\r\n          u => u.email.trim() === email.trim() && u.password.trim() === password.trim()\r\n        );\r\n\r\n        if (foundUser) {\r\n          setUser(foundUser);\r\n          setIsAdmin(foundUser.isAdmin);\r\n          localStorage.setItem('user', JSON.stringify(foundUser));\r\n          toast.success('Вы вошли!');\r\n          resolve(foundUser);\r\n        } else {\r\n          toast.error('Неверный email или пароль');\r\n          reject(new Error('Неверный email или пароль'));\r\n        }\r\n      }, 500);\r\n    });\r\n  };\r\n\r\n  // Функция регистрации\r\n  const register = async (name, email, password) => {\r\n    return new Promise((resolve, reject) => {\r\n      setTimeout(() => {\r\n        if (users.some(u => u.email.trim() === email.trim())) {\r\n          toast.warn('Пользователь с таким email уже существует');\r\n          reject(new Error('Пользователь с таким email уже существует'));\r\n          return;\r\n        }\r\n\r\n        if (password.length < 6) {\r\n          toast.warn('Пароль должен быть минимум 6 символов');\r\n          reject(new Error('Пароль должен быть минимум 6 символов'));\r\n          return;\r\n        }\r\n\r\n        const newUser = {\r\n          id: Date.now(),\r\n          name,\r\n          email,\r\n          password,\r\n          isAdmin: false\r\n        };\r\n\r\n        setUsers(prev => [...prev, newUser]);\r\n        setUser(newUser);\r\n        setIsAdmin(false);\r\n        localStorage.setItem('user', JSON.stringify(newUser));\r\n        toast.success('Регистрация успешна!');\r\n        resolve(newUser);\r\n      }, 500);\r\n    });\r\n  };\r\n\r\n  // Выход из аккаунта\r\n  const logout = () => {\r\n    setUser(null);\r\n    setIsAdmin(false);\r\n    localStorage.removeItem('user');\r\n    toast.info('Вы вышли из системы');\r\n  };\r\n\r\n  // Получение текущего пользователя (из localStorage)\r\n  const fetchCurrentUser = () => {\r\n    const storedUser = localStorage.getItem('user');\r\n    if (storedUser) {\r\n      const parsedUser = JSON.parse(storedUser);\r\n      setUser(parsedUser);\r\n      setIsAdmin(parsedUser.isAdmin || false);\r\n      return parsedUser;\r\n    }\r\n    return null;\r\n  };\r\n\r\n  // Добавление товара в корзину\r\n  const addToCart = (product) => {\r\n    setCart(prev => [...prev, product]);\r\n    toast.success(`${product.name} добавлен в корзину`);\r\n  };\r\n\r\n  // Удаление товара из корзины\r\n  const removeFromCart = (productId) => {\r\n    setCart(prev => prev.filter(item => item.id !== productId));\r\n    toast.info('Товар удален');\r\n  };\r\n\r\n  // Очистка корзины\r\n  const clearCart = () => {\r\n    setCart([]);\r\n    toast.success('Корзина очищена');\r\n  };\r\n\r\n  // Подсчёт товаров в корзине\r\n  const cartCount = cart.length;\r\n\r\n  // Сумма всех товаров\r\n  const cartTotal = cart.reduce((sum, item) => sum + item.price * item.quantity, 0);\r\n\r\n  return (\r\n    <CartContext.Provider\r\n      value={{\r\n        cart,\r\n        user,\r\n        isAdmin,\r\n        cartCount,\r\n        cartTotal,\r\n        addToCart,\r\n        removeFromCart,\r\n        clearCart,\r\n        login,\r\n        register,\r\n        fetchCurrentUser, // ✅ Передаём функцию\r\n        logout\r\n      }}\r\n    >\r\n      {children}\r\n    </CartContext.Provider>\r\n  );\r\n};\r\n\r\n// Хук для использования контекста\r\nexport const useCart = () => useContext(CartContext);"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}