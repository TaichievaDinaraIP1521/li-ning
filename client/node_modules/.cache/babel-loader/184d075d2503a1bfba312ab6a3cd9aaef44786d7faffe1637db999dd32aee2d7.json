{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dinat\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\lining\\\\client\\\\src\\\\context\\\\CartContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CartContext = /*#__PURE__*/createContext();\nexport const CartProvider = ({\n  children\n}) => {\n  _s();\n  const [cart, setCart] = useState([]);\n  const [user, setUser] = useState(null);\n  const [isAdmin, setIsAdmin] = useState(false);\n  const [users, setUsers] = useState([{\n    id: 1,\n    name: 'Admin',\n    email: 'admin@example.com',\n    password: 'admin123',\n    isAdmin: true\n  }, {\n    id: 2,\n    name: 'User',\n    email: 'user@example.com',\n    password: 'user123',\n    isAdmin: false\n  }]);\n\n  // Загрузка данных при старте\n  useEffect(() => {\n    const storedUser = localStorage.getItem('user');\n    if (storedUser) {\n      const parsedUser = JSON.parse(storedUser);\n      setUser(parsedUser);\n      setIsAdmin(parsedUser.isAdmin || false);\n    }\n    const savedCart = JSON.parse(localStorage.getItem('tempCart')) || [];\n    setCart(savedCart);\n  }, []);\n\n  // Сохраняем корзину в localStorage при изменении\n  useEffect(() => {\n    localStorage.setItem('tempCart', JSON.stringify(cart));\n  }, [cart]);\n\n  // Вход пользователя\n  const login = async (email, password) => {\n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n        const foundUser = users.find(u => u.email.trim() === email.trim() && u.password.trim() === password.trim());\n        if (foundUser) {\n          setUser(foundUser);\n          setIsAdmin(foundUser.isAdmin);\n          localStorage.setItem('user', JSON.stringify(foundUser));\n          toast.success('Вы вошли!');\n          resolve(foundUser);\n        } else {\n          toast.error('Неверный email или пароль');\n          reject(new Error('Неверный email или пароль'));\n        }\n      }, 500);\n    });\n  };\n\n  // Регистрация\n  const register = async (name, email, password) => {\n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n        if (users.some(u => u.email.trim() === email.trim())) {\n          toast.warn('Пользователь с таким email уже существует');\n          reject(new Error('Пользователь с таким email уже существует'));\n          return;\n        }\n        if (password.length < 6) {\n          toast.warn('Пароль должен быть минимум 6 символов');\n          reject(new Error('Пароль должен быть минимум 6 символов'));\n          return;\n        }\n        const newUser = {\n          id: Date.now(),\n          name,\n          email,\n          password,\n          isAdmin: false\n        };\n        setUsers(prev => [...prev, newUser]);\n        setUser(newUser);\n        setIsAdmin(false);\n        localStorage.setItem('user', JSON.stringify(newUser));\n        toast.success('Регистрация успешна!');\n        resolve(newUser);\n      }, 500);\n    });\n  };\n\n  // Выход\n  const logout = () => {\n    setUser(null);\n    setIsAdmin(false);\n    localStorage.removeItem('user');\n    toast.info('Вы вышли из системы');\n  };\n\n  // Получить текущего пользователя\n  const fetchCurrentUser = () => {\n    const storedUser = localStorage.getItem('user');\n    if (storedUser) {\n      const parsedUser = JSON.parse(storedUser);\n      setUser(parsedUser);\n      setIsAdmin(parsedUser.isAdmin || false);\n      return parsedUser;\n    }\n    return null;\n  };\n\n  // Добавление товара\n  const addToCart = product => {\n    setCart(prev => {\n      const existingItem = prev.find(item => item.id === product.id);\n      if (existingItem) {\n        return prev.map(item => item.id === product.id ? {\n          ...item,\n          quantity: (item.quantity || 1) + 1\n        } : item);\n      }\n      return [...prev, {\n        ...product,\n        quantity: 1\n      }];\n    });\n    toast.success(`${product.name} добавлен в корзину`);\n  };\n\n  // Уменьшение количества\n  const decreaseQuantity = productId => {\n    setCart(prev => prev.map(item => item.id === productId && item.quantity > 1 ? {\n      ...item,\n      quantity: item.quantity - 1\n    } : item).filter(item => item.quantity > 0));\n    toast.info('Один товар убран из корзины');\n  };\n  const increaseQuantity = productId => {\n    setCart(prevCart => prevCart.map(item => item.id === productId ? {\n      ...item,\n      quantity: item.quantity + 1\n    } : item));\n  };\n  // Полное удаление\n  const removeFromCart = productId => {\n    setCart(prev => prev.filter(item => item.id !== productId));\n    toast.info('Товар полностью удален из корзины');\n  };\n\n  // Очистка\n  const clearCart = () => {\n    setCart([]);\n    toast.success('Корзина очищена');\n  };\n\n  // Подсчёт товаров\n  const cartCount = cart.reduce((sum, item) => sum + (item.quantity || 1), 0);\n\n  // Общая сумма\n  const cartTotal = cart.reduce((sum, item) => sum + item.price * item.quantity, 0);\n  const placeOrder = () => {\n    if (!user || cart.length === 0) return null;\n    const order = {\n      id: Date.now(),\n      userId: user.id,\n      items: [...cart],\n      total: cartTotal,\n      date: new Date().toISOString(),\n      status: 'Ожидает подтверждения'\n    };\n\n    // Сохраняем в localStorage для демонстрации\n    const orders = JSON.parse(localStorage.getItem('orders') || '[]');\n    orders.push(order);\n    localStorage.setItem('orders', JSON.stringify(orders));\n\n    // Очищаем корзину после оформления\n    clearCart();\n    toast.success('Заказ оформлен!');\n    return order;\n  };\n  const createOrder = async order => {\n    try {\n      // 1. Сохраняем заказ в localStorage (или отправляем на сервер)\n      const orders = JSON.parse(localStorage.getItem('orders') || '[]');\n      const newOrder = {\n        ...order,\n        id: Date.now().toString()\n      };\n      localStorage.setItem('orders', JSON.stringify([...orders, newOrder]));\n\n      // 2. Обновляем историю заказов пользователя\n      const users = JSON.parse(localStorage.getItem('users') || '[]');\n      const updatedUsers = users.map(u => u.id === order.userId ? {\n        ...u,\n        orders: [...(u.orders || []), newOrder.id]\n      } : u);\n      localStorage.setItem('users', JSON.stringify(updatedUsers));\n      return newOrder;\n    } catch (error) {\n      throw new Error('Не удалось создать заказ');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: {\n      cart,\n      user,\n      isAdmin,\n      cartCount,\n      cartTotal,\n      addToCart,\n      removeFromCart,\n      decreaseQuantity,\n      increaseQuantity,\n      clearCart,\n      login,\n      register,\n      fetchCurrentUser,\n      logout,\n      placeOrder,\n      createOrder\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 236,\n    columnNumber: 5\n  }, this);\n};\n_s(CartProvider, \"5pLgBJCutVd0iLjoI3ryl8b4/VU=\");\n_c = CartProvider;\nexport const useCart = () => {\n  _s2();\n  return useContext(CartContext);\n};\n_s2(useCart, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","toast","jsxDEV","_jsxDEV","CartContext","CartProvider","children","_s","cart","setCart","user","setUser","isAdmin","setIsAdmin","users","setUsers","id","name","email","password","storedUser","localStorage","getItem","parsedUser","JSON","parse","savedCart","setItem","stringify","login","Promise","resolve","reject","setTimeout","foundUser","find","u","trim","success","error","Error","register","some","warn","length","newUser","Date","now","prev","logout","removeItem","info","fetchCurrentUser","addToCart","product","existingItem","item","map","quantity","decreaseQuantity","productId","filter","increaseQuantity","prevCart","removeFromCart","clearCart","cartCount","reduce","sum","cartTotal","price","placeOrder","order","userId","items","total","date","toISOString","status","orders","push","createOrder","newOrder","toString","updatedUsers","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useCart","_s2","$RefreshReg$"],"sources":["C:/Users/dinat/OneDrive/Рабочий стол/lining/client/src/context/CartContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nexport const CartContext = createContext();\r\n\r\nexport const CartProvider = ({ children }) => {\r\n  const [cart, setCart] = useState([]);\r\n  const [user, setUser] = useState(null);\r\n  const [isAdmin, setIsAdmin] = useState(false);\r\n\r\n  const [users, setUsers] = useState([\r\n    {\r\n      id: 1,\r\n      name: 'Admin',\r\n      email: 'admin@example.com',\r\n      password: 'admin123',\r\n      isAdmin: true\r\n    },\r\n    {\r\n      id: 2,\r\n      name: 'User',\r\n      email: 'user@example.com',\r\n      password: 'user123',\r\n      isAdmin: false\r\n    }\r\n  ]);\r\n\r\n  // Загрузка данных при старте\r\n  useEffect(() => {\r\n    const storedUser = localStorage.getItem('user');\r\n    if (storedUser) {\r\n      const parsedUser = JSON.parse(storedUser);\r\n      setUser(parsedUser);\r\n      setIsAdmin(parsedUser.isAdmin || false);\r\n    }\r\n\r\n    const savedCart = JSON.parse(localStorage.getItem('tempCart')) || [];\r\n    setCart(savedCart);\r\n  }, []);\r\n\r\n  // Сохраняем корзину в localStorage при изменении\r\n  useEffect(() => {\r\n    localStorage.setItem('tempCart', JSON.stringify(cart));\r\n  }, [cart]);\r\n\r\n  // Вход пользователя\r\n  const login = async (email, password) => {\r\n    return new Promise((resolve, reject) => {\r\n      setTimeout(() => {\r\n        const foundUser = users.find(\r\n          u => u.email.trim() === email.trim() && u.password.trim() === password.trim()\r\n        );\r\n\r\n        if (foundUser) {\r\n          setUser(foundUser);\r\n          setIsAdmin(foundUser.isAdmin);\r\n          localStorage.setItem('user', JSON.stringify(foundUser));\r\n          toast.success('Вы вошли!');\r\n          resolve(foundUser);\r\n        } else {\r\n          toast.error('Неверный email или пароль');\r\n          reject(new Error('Неверный email или пароль'));\r\n        }\r\n      }, 500);\r\n    });\r\n  };\r\n\r\n  // Регистрация\r\n  const register = async (name, email, password) => {\r\n    return new Promise((resolve, reject) => {\r\n      setTimeout(() => {\r\n        if (users.some(u => u.email.trim() === email.trim())) {\r\n          toast.warn('Пользователь с таким email уже существует');\r\n          reject(new Error('Пользователь с таким email уже существует'));\r\n          return;\r\n        }\r\n\r\n        if (password.length < 6) {\r\n          toast.warn('Пароль должен быть минимум 6 символов');\r\n          reject(new Error('Пароль должен быть минимум 6 символов'));\r\n          return;\r\n        }\r\n\r\n        const newUser = {\r\n          id: Date.now(),\r\n          name,\r\n          email,\r\n          password,\r\n          isAdmin: false\r\n        };\r\n\r\n        setUsers(prev => [...prev, newUser]);\r\n        setUser(newUser);\r\n        setIsAdmin(false);\r\n        localStorage.setItem('user', JSON.stringify(newUser));\r\n        toast.success('Регистрация успешна!');\r\n        resolve(newUser);\r\n      }, 500);\r\n    });\r\n  };\r\n\r\n  // Выход\r\n  const logout = () => {\r\n    setUser(null);\r\n    setIsAdmin(false);\r\n    localStorage.removeItem('user');\r\n    toast.info('Вы вышли из системы');\r\n  };\r\n\r\n  // Получить текущего пользователя\r\n  const fetchCurrentUser = () => {\r\n    const storedUser = localStorage.getItem('user');\r\n    if (storedUser) {\r\n      const parsedUser = JSON.parse(storedUser);\r\n      setUser(parsedUser);\r\n      setIsAdmin(parsedUser.isAdmin || false);\r\n      return parsedUser;\r\n    }\r\n    return null;\r\n  };\r\n\r\n  // Добавление товара\r\n  const addToCart = (product) => {\r\n    setCart((prev) => {\r\n      const existingItem = prev.find(item => item.id === product.id);\r\n      if (existingItem) {\r\n        return prev.map(item =>\r\n          item.id === product.id\r\n            ? { ...item, quantity: (item.quantity || 1) + 1 }\r\n            : item\r\n        );\r\n      }\r\n      return [...prev, { ...product, quantity: 1 }];\r\n    });\r\n\r\n    toast.success(`${product.name} добавлен в корзину`);\r\n  };\r\n\r\n  // Уменьшение количества\r\n  const decreaseQuantity = (productId) => {\r\n    setCart((prev) =>\r\n      prev\r\n        .map((item) =>\r\n          item.id === productId && item.quantity > 1\r\n            ? { ...item, quantity: item.quantity - 1 }\r\n            : item\r\n        )\r\n        .filter((item) => item.quantity > 0)\r\n    );\r\n\r\n    toast.info('Один товар убран из корзины');\r\n  };\r\nconst increaseQuantity = (productId) => {\r\n  setCart(prevCart => \r\n    prevCart.map(item =>\r\n      item.id === productId\r\n        ? { ...item, quantity: item.quantity + 1 }\r\n        : item\r\n    )\r\n  );\r\n};\r\n  // Полное удаление\r\n  const removeFromCart = (productId) => {\r\n    setCart((prev) => prev.filter(item => item.id !== productId));\r\n    toast.info('Товар полностью удален из корзины');\r\n  };\r\n\r\n  // Очистка\r\n  const clearCart = () => {\r\n    setCart([]);\r\n    toast.success('Корзина очищена');\r\n  };\r\n\r\n  // Подсчёт товаров\r\n  const cartCount = cart.reduce((sum, item) => sum + (item.quantity || 1), 0);\r\n\r\n  // Общая сумма\r\n  const cartTotal = cart.reduce((sum, item) => sum + item.price * item.quantity, 0);\r\n  \r\n  const placeOrder = () => {\r\n  if (!user || cart.length === 0) return null;\r\n\r\n  const order = {\r\n    id: Date.now(),\r\n    userId: user.id,\r\n    items: [...cart],\r\n    total: cartTotal,\r\n    date: new Date().toISOString(),\r\n    status: 'Ожидает подтверждения'\r\n  };\r\n\r\n  // Сохраняем в localStorage для демонстрации\r\n  const orders = JSON.parse(localStorage.getItem('orders') || '[]');\r\n  orders.push(order);\r\n  localStorage.setItem('orders', JSON.stringify(orders));\r\n\r\n  // Очищаем корзину после оформления\r\n  clearCart();\r\n\r\n  toast.success('Заказ оформлен!');\r\n  return order;\r\n};\r\n  const createOrder = async (order) => {\r\n    try {\r\n      // 1. Сохраняем заказ в localStorage (или отправляем на сервер)\r\n      const orders = JSON.parse(localStorage.getItem('orders') || '[]');\r\n      const newOrder = { \r\n        ...order, \r\n        id: Date.now().toString() \r\n      };\r\n      \r\n      localStorage.setItem('orders', JSON.stringify([...orders, newOrder]));\r\n      \r\n      // 2. Обновляем историю заказов пользователя\r\n      const users = JSON.parse(localStorage.getItem('users') || '[]');\r\n      const updatedUsers = users.map(u => \r\n        u.id === order.userId \r\n          ? { \r\n              ...u, \r\n              orders: [...(u.orders || []), newOrder.id] \r\n            } \r\n          : u\r\n      );\r\n      \r\n      localStorage.setItem('users', JSON.stringify(updatedUsers));\r\n      \r\n      return newOrder;\r\n    } catch (error) {\r\n      throw new Error('Не удалось создать заказ');\r\n    }\r\n  };\r\n\r\n\r\n  return (\r\n    <CartContext.Provider\r\n      value={{\r\n        cart,\r\n        user,\r\n        isAdmin,\r\n        cartCount,\r\n        cartTotal,\r\n        addToCart,\r\n        removeFromCart,\r\n        decreaseQuantity,\r\n        increaseQuantity,\r\n        clearCart,\r\n        login,\r\n        register,\r\n        fetchCurrentUser,\r\n        logout,\r\n        placeOrder, \r\n        createOrder\r\n      }}\r\n    >\r\n      {children}\r\n    </CartContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useCart = () => useContext(CartContext);"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}