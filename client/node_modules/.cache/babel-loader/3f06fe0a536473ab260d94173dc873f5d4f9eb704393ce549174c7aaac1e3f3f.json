{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dinat\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\lining\\\\client\\\\src\\\\context\\\\CartContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { createContext, useState, useContext, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CartContext = /*#__PURE__*/createContext();\nexport const CartProvider = ({\n  children\n}) => {\n  _s();\n  // Состояние пользователя\n  const getInitialUser = () => {\n    const savedUser = localStorage.getItem('user');\n    return savedUser ? JSON.parse(savedUser) : null;\n  };\n  const [user, setUser] = useState(getInitialUser);\n  const [users, setUsers] = useState([{\n    name: 'Администратор',\n    email: 'admin1@mail.ru',\n    password: 'admin12341234',\n    isAdmin: true\n  }]);\n\n  // Состояние корзины\n  const [cartItems, setCartItems] = useState(() => {\n    const savedCart = localStorage.getItem('cartItems');\n    return savedCart ? JSON.parse(savedCart) : [];\n  });\n  const saveCartToLocalStorage = items => {\n    localStorage.setItem('cartItems', JSON.stringify(items));\n  };\n\n  // Обновление количества товаров\n  const cartCount = cartItems.reduce((sum, item) => sum + item.quantity, 0);\n\n  // Функции корзины\n  const addToCart = product => {\n    setCartItems(prev => {\n      const existingItem = prev.find(item => item.productId === product.id);\n      if (existingItem) {\n        const updatedCart = prev.map(item => item.productId === product.id ? {\n          ...item,\n          quantity: item.quantity + 1\n        } : item);\n        saveCartToLocalStorage(updatedCart);\n        return updatedCart;\n      }\n      const newItem = {\n        productId: product.id,\n        name: product.name,\n        price: product.price,\n        image: product.image || '/images/placeholder-product.jpg',\n        quantity: 1\n      };\n      const updatedCart = [...prev, newItem];\n      saveCartToLocalStorage(updatedCart);\n      return updatedCart;\n    });\n  };\n  const removeFromCart = cartId => {\n    setCartItems(prev => {\n      const updatedCart = prev.filter(item => item.cartId !== cartId);\n      saveCartToLocalStorage(updatedCart);\n      return updatedCart;\n    });\n  };\n  const updateQuantity = (cartId, newQuantity) => {\n    setCartItems(prev => {\n      const updatedCart = prev.map(item => item.cartId === cartId ? {\n        ...item,\n        quantity: Math.max(1, newQuantity)\n      } : item);\n      saveCartToLocalStorage(updatedCart);\n      return updatedCart;\n    });\n  };\n\n  // Авторизация\n  const isAuthenticated = () => {\n    return user !== null;\n  };\n  const fetchCurrentUser = async () => {\n    const savedUser = getInitialUser();\n    if (savedUser) {\n      setUser(savedUser);\n      return savedUser;\n    }\n    return null;\n  };\n  const login = async (email, password) => {\n    const foundUser = users.find(user => user.email === email && user.password === password);\n    if (foundUser) {\n      const userData = {\n        name: foundUser.name,\n        email: foundUser.email,\n        isAdmin: foundUser.isAdmin || false\n      };\n      setUser(userData);\n      localStorage.setItem('user', JSON.stringify(userData));\n      return userData;\n    }\n    throw new Error('Неверные email или пароль');\n  };\n  const register = async (name, email, password) => {\n    const emailExists = users.some(user => user.email === email);\n    if (emailExists) {\n      throw new Error('Пользователь с таким email уже существует');\n    }\n    const newUser = {\n      name,\n      email,\n      password,\n      isAdmin: false\n    };\n    setUsers(prev => [...prev, newUser]);\n    const userData = {\n      name,\n      email,\n      isAdmin: false\n    };\n    setUser(userData);\n    localStorage.setItem('user', JSON.stringify(userData));\n    return userData;\n  };\n  const logout = () => {\n    setUser(null);\n    localStorage.removeItem('user');\n  };\n  const isAdmin = (userToCheck = user) => {\n    return (userToCheck === null || userToCheck === void 0 ? void 0 : userToCheck.isAdmin) === true;\n  };\n\n  // Инициализация при загрузке\n  useEffect(() => {\n    const checkAuth = async () => {\n      try {\n        await fetchCurrentUser();\n      } catch (error) {\n        console.error('Ошибка проверки авторизации:', error);\n      }\n    };\n    checkAuth();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: {\n      // Пользователь\n      user,\n      login,\n      register,\n      logout,\n      isAdmin,\n      isAuthenticated,\n      fetchCurrentUser,\n      // Корзина\n      cartItems,\n      cartCount,\n      addToCart,\n      removeFromCart,\n      updateQuantity\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 166,\n    columnNumber: 5\n  }, this);\n};\n_s(CartProvider, \"8DQpbjOXcj2ECNwT/ntf3KZKmFI=\");\n_c = CartProvider;\nexport const useCart = () => {\n  _s2();\n  return useContext(CartContext);\n};\n_s2(useCart, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["createContext","useState","useContext","useEffect","jsxDEV","_jsxDEV","CartContext","CartProvider","children","_s","getInitialUser","savedUser","localStorage","getItem","JSON","parse","user","setUser","users","setUsers","name","email","password","isAdmin","cartItems","setCartItems","savedCart","saveCartToLocalStorage","items","setItem","stringify","cartCount","reduce","sum","item","quantity","addToCart","product","prev","existingItem","find","productId","id","updatedCart","map","newItem","price","image","removeFromCart","cartId","filter","updateQuantity","newQuantity","Math","max","isAuthenticated","fetchCurrentUser","login","foundUser","userData","Error","register","emailExists","some","newUser","logout","removeItem","userToCheck","checkAuth","error","console","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useCart","_s2","$RefreshReg$"],"sources":["C:/Users/dinat/OneDrive/Рабочий стол/lining/client/src/context/CartContext.js"],"sourcesContent":["import { createContext, useState, useContext, useEffect } from 'react';\r\n\r\nconst CartContext = createContext();\r\n\r\nexport const CartProvider = ({ children }) => {\r\n  // Состояние пользователя\r\n  const getInitialUser = () => {\r\n    const savedUser = localStorage.getItem('user');\r\n    return savedUser ? JSON.parse(savedUser) : null;\r\n  };\r\n\r\n  const [user, setUser] = useState(getInitialUser);\r\n  const [users, setUsers] = useState([\r\n    {\r\n      name: 'Администратор',\r\n      email: 'admin1@mail.ru',\r\n      password: 'admin12341234',\r\n      isAdmin: true\r\n    }\r\n  ]);\r\n\r\n  // Состояние корзины\r\n  const [cartItems, setCartItems] = useState(() => {\r\n    const savedCart = localStorage.getItem('cartItems');\r\n    return savedCart ? JSON.parse(savedCart) : [];\r\n  });\r\n\r\n  const saveCartToLocalStorage = (items) => {\r\n    localStorage.setItem('cartItems', JSON.stringify(items));\r\n  };\r\n\r\n  // Обновление количества товаров\r\n  const cartCount = cartItems.reduce((sum, item) => sum + item.quantity, 0);\r\n\r\n  // Функции корзины\r\n  const addToCart = (product) => {\r\n    setCartItems(prev => {\r\n      const existingItem = prev.find(item => item.productId === product.id);\r\n      \r\n      if (existingItem) {\r\n        const updatedCart = prev.map(item =>\r\n          item.productId === product.id\r\n            ? { ...item, quantity: item.quantity + 1 }\r\n            : item\r\n        );\r\n        saveCartToLocalStorage(updatedCart);\r\n        return updatedCart;\r\n      }\r\n\r\n      const newItem = {\r\n        productId: product.id,\r\n        name: product.name,\r\n        price: product.price,\r\n        image: product.image || '/images/placeholder-product.jpg',\r\n        quantity: 1\r\n      };\r\n\r\n      const updatedCart = [...prev, newItem];\r\n      saveCartToLocalStorage(updatedCart);\r\n      return updatedCart;\r\n    });\r\n  };\r\n\r\n  const removeFromCart = (cartId) => {\r\n    setCartItems(prev => {\r\n      const updatedCart = prev.filter(item => item.cartId !== cartId);\r\n      saveCartToLocalStorage(updatedCart);\r\n      return updatedCart;\r\n    });\r\n  };\r\n\r\n  const updateQuantity = (cartId, newQuantity) => {\r\n    setCartItems(prev => {\r\n      const updatedCart = prev.map(item =>\r\n        item.cartId === cartId\r\n          ? { ...item, quantity: Math.max(1, newQuantity) }\r\n          : item\r\n      );\r\n      saveCartToLocalStorage(updatedCart);\r\n      return updatedCart;\r\n    });\r\n  };\r\n\r\n  // Авторизация\r\n  const isAuthenticated = () => {\r\n    return user !== null;\r\n  };\r\n\r\n  const fetchCurrentUser = async () => {\r\n    const savedUser = getInitialUser();\r\n    if (savedUser) {\r\n      setUser(savedUser);\r\n      return savedUser;\r\n    }\r\n    return null;\r\n  };\r\n\r\n  const login = async (email, password) => {\r\n    const foundUser = users.find(\r\n      (user) => user.email === email && user.password === password\r\n    );\r\n\r\n    if (foundUser) {\r\n      const userData = {\r\n        name: foundUser.name,\r\n        email: foundUser.email,\r\n        isAdmin: foundUser.isAdmin || false,\r\n      };\r\n      setUser(userData);\r\n      localStorage.setItem('user', JSON.stringify(userData));\r\n      return userData;\r\n    }\r\n\r\n    throw new Error('Неверные email или пароль');\r\n  };\r\n\r\n  const register = async (name, email, password) => {\r\n    const emailExists = users.some(user => user.email === email);\r\n    if (emailExists) {\r\n      throw new Error('Пользователь с таким email уже существует');\r\n    }\r\n\r\n    const newUser = {\r\n      name,\r\n      email,\r\n      password,\r\n      isAdmin: false,\r\n    };\r\n\r\n    setUsers(prev => [...prev, newUser]);\r\n\r\n    const userData = {\r\n      name,\r\n      email,\r\n      isAdmin: false,\r\n    };\r\n    setUser(userData);\r\n    localStorage.setItem('user', JSON.stringify(userData));\r\n    \r\n    return userData;\r\n  };\r\n\r\n  const logout = () => {\r\n    setUser(null);\r\n    localStorage.removeItem('user');\r\n  };\r\n\r\n  const isAdmin = (userToCheck = user) => {\r\n    return userToCheck?.isAdmin === true;\r\n  };\r\n\r\n  // Инициализация при загрузке\r\n  useEffect(() => {\r\n    const checkAuth = async () => {\r\n      try {\r\n        await fetchCurrentUser();\r\n      } catch (error) {\r\n        console.error('Ошибка проверки авторизации:', error);\r\n      }\r\n    };\r\n\r\n    checkAuth();\r\n  }, []);\r\n\r\n  return (\r\n    <CartContext.Provider\r\n      value={{\r\n        // Пользователь\r\n        user,\r\n        login,\r\n        register,\r\n        logout,\r\n        isAdmin,\r\n        isAuthenticated,\r\n        fetchCurrentUser,\r\n\r\n        // Корзина\r\n        cartItems,\r\n        cartCount,\r\n        addToCart,\r\n        removeFromCart,\r\n        updateQuantity,\r\n      }}\r\n    >\r\n      {children}\r\n    </CartContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useCart = () => useContext(CartContext);"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}