{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dinat\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\lining\\\\client\\\\src\\\\context\\\\CartContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { createContext, useState, useContext, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CartContext = /*#__PURE__*/createContext();\nexport const CartProvider = ({\n  children\n}) => {\n  _s();\n  // Читаем пользователя из localStorage при старте\n  const getInitialUser = () => {\n    const savedUser = localStorage.getItem('user');\n    return savedUser ? JSON.parse(savedUser) : null;\n  };\n  const [user, setUser] = useState(getInitialUser);\n  const [users, setUsers] = useState([{\n    name: 'Администратор',\n    email: 'admin1@mail.ru',\n    password: 'admin12341234',\n    isAdmin: true\n  }]);\n  const isAuthenticated = () => {\n    return user !== null;\n  };\n  const fetchCurrentUser = async () => {\n    const savedUser = getInitialUser();\n    if (savedUser) {\n      setUser(savedUser); // Обновляем состояние\n      return savedUser;\n    }\n    return null;\n  };\n  const login = async (email, password) => {\n    const foundUser = users.find(user => user.email === email && user.password === password);\n    if (foundUser) {\n      const userData = {\n        name: foundUser.name,\n        email: foundUser.email,\n        isAdmin: foundUser.isAdmin || false\n      };\n      setUser(userData);\n      localStorage.setItem('user', JSON.stringify(userData));\n      return userData;\n    }\n    throw new Error('Неверные email или пароль');\n  };\n  const register = async (name, email, password) => {\n    const emailExists = users.some(user => user.email === email);\n    if (emailExists) {\n      throw new Error('Пользователь с таким email уже существует');\n    }\n    const newUser = {\n      name,\n      email,\n      password,\n      isAdmin: false\n    };\n    setUsers(prev => [...prev, newUser]);\n    const userData = {\n      name,\n      email,\n      isAdmin: false\n    };\n    setUser(userData);\n    localStorage.setItem('user', JSON.stringify(userData));\n    return userData;\n  };\n  const logout = () => {\n    setUser(null);\n    localStorage.removeItem('user');\n  };\n  const isAdmin = (userToCheck = user) => {\n    return (userToCheck === null || userToCheck === void 0 ? void 0 : userToCheck.isAdmin) === true;\n  };\n\n  // Инициализация пользователя при загрузке\n  useEffect(() => {\n    const checkAuth = async () => {\n      try {\n        await fetchCurrentUser();\n      } catch (error) {\n        console.error('Ошибка проверки авторизации:', error);\n      }\n    };\n    checkAuth();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: {\n      user,\n      login,\n      register,\n      logout,\n      isAdmin,\n      isAuthenticated,\n      fetchCurrentUser\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 5\n  }, this);\n};\n_s(CartProvider, \"veopLFEV/sPJXPIOidxbcGVQHy8=\");\n_c = CartProvider;\nexport const useCart = () => {\n  _s2();\n  return useContext(CartContext);\n};\n_s2(useCart, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["createContext","useState","useContext","useEffect","jsxDEV","_jsxDEV","CartContext","CartProvider","children","_s","getInitialUser","savedUser","localStorage","getItem","JSON","parse","user","setUser","users","setUsers","name","email","password","isAdmin","isAuthenticated","fetchCurrentUser","login","foundUser","find","userData","setItem","stringify","Error","register","emailExists","some","newUser","prev","logout","removeItem","userToCheck","checkAuth","error","console","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useCart","_s2","$RefreshReg$"],"sources":["C:/Users/dinat/OneDrive/Рабочий стол/lining/client/src/context/CartContext.js"],"sourcesContent":["import { createContext, useState, useContext, useEffect } from 'react';\r\n\r\nconst CartContext = createContext();\r\n\r\nexport const CartProvider = ({ children }) => {\r\n  // Читаем пользователя из localStorage при старте\r\n  const getInitialUser = () => {\r\n    const savedUser = localStorage.getItem('user');\r\n    return savedUser ? JSON.parse(savedUser) : null;\r\n  };\r\n\r\n  const [user, setUser] = useState(getInitialUser);\r\n  const [users, setUsers] = useState([\r\n    {\r\n      name: 'Администратор',\r\n      email: 'admin1@mail.ru',\r\n      password: 'admin12341234',\r\n      isAdmin: true\r\n    }\r\n  ]);\r\n\r\n  const isAuthenticated = () => {\r\n    return user !== null;\r\n  };\r\n\r\n  const fetchCurrentUser = async () => {\r\n    const savedUser = getInitialUser();\r\n    if (savedUser) {\r\n      setUser(savedUser); // Обновляем состояние\r\n      return savedUser;\r\n    }\r\n    return null;\r\n  };\r\n\r\n  const login = async (email, password) => {\r\n    const foundUser = users.find(\r\n      (user) => user.email === email && user.password === password\r\n    );\r\n\r\n    if (foundUser) {\r\n      const userData = {\r\n        name: foundUser.name,\r\n        email: foundUser.email,\r\n        isAdmin: foundUser.isAdmin || false,\r\n      };\r\n      setUser(userData);\r\n      localStorage.setItem('user', JSON.stringify(userData));\r\n      return userData;\r\n    }\r\n\r\n    throw new Error('Неверные email или пароль');\r\n  };\r\n\r\n  const register = async (name, email, password) => {\r\n    const emailExists = users.some((user) => user.email === email);\r\n    if (emailExists) {\r\n      throw new Error('Пользователь с таким email уже существует');\r\n    }\r\n\r\n    const newUser = {\r\n      name,\r\n      email,\r\n      password,\r\n      isAdmin: false,\r\n    };\r\n\r\n    setUsers((prev) => [...prev, newUser]);\r\n\r\n    const userData = {\r\n      name,\r\n      email,\r\n      isAdmin: false,\r\n    };\r\n    setUser(userData);\r\n    localStorage.setItem('user', JSON.stringify(userData));\r\n\r\n    return userData;\r\n  };\r\n\r\n  const logout = () => {\r\n    setUser(null);\r\n    localStorage.removeItem('user');\r\n  };\r\n\r\n  const isAdmin = (userToCheck = user) => {\r\n    return userToCheck?.isAdmin === true;\r\n  };\r\n\r\n  // Инициализация пользователя при загрузке\r\n  useEffect(() => {\r\n    const checkAuth = async () => {\r\n      try {\r\n        await fetchCurrentUser();\r\n      } catch (error) {\r\n        console.error('Ошибка проверки авторизации:', error);\r\n      }\r\n    };\r\n\r\n    checkAuth();\r\n  }, []);\r\n\r\n  return (\r\n    <CartContext.Provider\r\n      value={{\r\n        user,\r\n        login,\r\n        register,\r\n        logout,\r\n        isAdmin,\r\n        isAuthenticated,\r\n        fetchCurrentUser,\r\n      }}\r\n    >\r\n      {children}\r\n    </CartContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useCart = () => useContext(CartContext);"],"mappings":";;;AAAA,SAASA,aAAa,EAAEC,QAAQ,EAAEC,UAAU,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvE,MAAMC,WAAW,gBAAGN,aAAa,CAAC,CAAC;AAEnC,OAAO,MAAMO,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5C;EACA,MAAMC,cAAc,GAAGA,CAAA,KAAM;IAC3B,MAAMC,SAAS,GAAGC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;IAC9C,OAAOF,SAAS,GAAGG,IAAI,CAACC,KAAK,CAACJ,SAAS,CAAC,GAAG,IAAI;EACjD,CAAC;EAED,MAAM,CAACK,IAAI,EAAEC,OAAO,CAAC,GAAGhB,QAAQ,CAACS,cAAc,CAAC;EAChD,MAAM,CAACQ,KAAK,EAAEC,QAAQ,CAAC,GAAGlB,QAAQ,CAAC,CACjC;IACEmB,IAAI,EAAE,eAAe;IACrBC,KAAK,EAAE,gBAAgB;IACvBC,QAAQ,EAAE,eAAe;IACzBC,OAAO,EAAE;EACX,CAAC,CACF,CAAC;EAEF,MAAMC,eAAe,GAAGA,CAAA,KAAM;IAC5B,OAAOR,IAAI,KAAK,IAAI;EACtB,CAAC;EAED,MAAMS,gBAAgB,GAAG,MAAAA,CAAA,KAAY;IACnC,MAAMd,SAAS,GAAGD,cAAc,CAAC,CAAC;IAClC,IAAIC,SAAS,EAAE;MACbM,OAAO,CAACN,SAAS,CAAC,CAAC,CAAC;MACpB,OAAOA,SAAS;IAClB;IACA,OAAO,IAAI;EACb,CAAC;EAED,MAAMe,KAAK,GAAG,MAAAA,CAAOL,KAAK,EAAEC,QAAQ,KAAK;IACvC,MAAMK,SAAS,GAAGT,KAAK,CAACU,IAAI,CACzBZ,IAAI,IAAKA,IAAI,CAACK,KAAK,KAAKA,KAAK,IAAIL,IAAI,CAACM,QAAQ,KAAKA,QACtD,CAAC;IAED,IAAIK,SAAS,EAAE;MACb,MAAME,QAAQ,GAAG;QACfT,IAAI,EAAEO,SAAS,CAACP,IAAI;QACpBC,KAAK,EAAEM,SAAS,CAACN,KAAK;QACtBE,OAAO,EAAEI,SAAS,CAACJ,OAAO,IAAI;MAChC,CAAC;MACDN,OAAO,CAACY,QAAQ,CAAC;MACjBjB,YAAY,CAACkB,OAAO,CAAC,MAAM,EAAEhB,IAAI,CAACiB,SAAS,CAACF,QAAQ,CAAC,CAAC;MACtD,OAAOA,QAAQ;IACjB;IAEA,MAAM,IAAIG,KAAK,CAAC,2BAA2B,CAAC;EAC9C,CAAC;EAED,MAAMC,QAAQ,GAAG,MAAAA,CAAOb,IAAI,EAAEC,KAAK,EAAEC,QAAQ,KAAK;IAChD,MAAMY,WAAW,GAAGhB,KAAK,CAACiB,IAAI,CAAEnB,IAAI,IAAKA,IAAI,CAACK,KAAK,KAAKA,KAAK,CAAC;IAC9D,IAAIa,WAAW,EAAE;MACf,MAAM,IAAIF,KAAK,CAAC,2CAA2C,CAAC;IAC9D;IAEA,MAAMI,OAAO,GAAG;MACdhB,IAAI;MACJC,KAAK;MACLC,QAAQ;MACRC,OAAO,EAAE;IACX,CAAC;IAEDJ,QAAQ,CAAEkB,IAAI,IAAK,CAAC,GAAGA,IAAI,EAAED,OAAO,CAAC,CAAC;IAEtC,MAAMP,QAAQ,GAAG;MACfT,IAAI;MACJC,KAAK;MACLE,OAAO,EAAE;IACX,CAAC;IACDN,OAAO,CAACY,QAAQ,CAAC;IACjBjB,YAAY,CAACkB,OAAO,CAAC,MAAM,EAAEhB,IAAI,CAACiB,SAAS,CAACF,QAAQ,CAAC,CAAC;IAEtD,OAAOA,QAAQ;EACjB,CAAC;EAED,MAAMS,MAAM,GAAGA,CAAA,KAAM;IACnBrB,OAAO,CAAC,IAAI,CAAC;IACbL,YAAY,CAAC2B,UAAU,CAAC,MAAM,CAAC;EACjC,CAAC;EAED,MAAMhB,OAAO,GAAGA,CAACiB,WAAW,GAAGxB,IAAI,KAAK;IACtC,OAAO,CAAAwB,WAAW,aAAXA,WAAW,uBAAXA,WAAW,CAAEjB,OAAO,MAAK,IAAI;EACtC,CAAC;;EAED;EACApB,SAAS,CAAC,MAAM;IACd,MAAMsC,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,MAAMhB,gBAAgB,CAAC,CAAC;MAC1B,CAAC,CAAC,OAAOiB,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;MACtD;IACF,CAAC;IAEDD,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEpC,OAAA,CAACC,WAAW,CAACsC,QAAQ;IACnBC,KAAK,EAAE;MACL7B,IAAI;MACJU,KAAK;MACLO,QAAQ;MACRK,MAAM;MACNf,OAAO;MACPC,eAAe;MACfC;IACF,CAAE;IAAAjB,QAAA,EAEDA;EAAQ;IAAAsC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAACxC,EAAA,CAhHWF,YAAY;AAAA2C,EAAA,GAAZ3C,YAAY;AAkHzB,OAAO,MAAM4C,OAAO,GAAGA,CAAA;EAAAC,GAAA;EAAA,OAAMlD,UAAU,CAACI,WAAW,CAAC;AAAA;AAAC8C,GAAA,CAAxCD,OAAO;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}