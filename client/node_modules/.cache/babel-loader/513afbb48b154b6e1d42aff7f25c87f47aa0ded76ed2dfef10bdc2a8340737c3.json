{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dinat\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\lining\\\\client\\\\src\\\\context\\\\CartContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { createContext, useState, useContext } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CartContext = /*#__PURE__*/createContext();\nexport const CartProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const login = async (email, password) => {\n    // Проверяем учетные данные администратора\n    if (email === 'admin1@mail.ru' && password === 'admin12341234') {\n      const adminUser = {\n        name: 'Администратор',\n        email: 'admin1@mail.ru',\n        isAdmin: true\n      };\n      setUser(adminUser);\n      return adminUser;\n    }\n\n    // Здесь должна быть обычная логика входа для обычных пользователей\n    // Например, запрос к API:\n    // const response = await api.login(email, password);\n    // setUser(response.data.user);\n    // return response.data.user;\n\n    throw new Error('Неверные учетные данные');\n  };\n  const register = async (name, email, password) => {\n    throw new Error('Регистрация временно недоступна');\n  };\n  const logout = () => {\n    setUser(null);\n  };\n  const isAdmin = () => {\n    return (user === null || user === void 0 ? void 0 : user.isAdmin) === true;\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: {\n      user,\n      login,\n      register,\n      logout,\n      isAdmin\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(CartProvider, \"Iei9RGtZU29Y1RhBe1sbfh/MntA=\");\n_c = CartProvider;\nexport const useCart = () => {\n  _s2();\n  return useContext(CartContext);\n};\n_s2(useCart, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["createContext","useState","useContext","jsxDEV","_jsxDEV","CartContext","CartProvider","children","_s","user","setUser","login","email","password","adminUser","name","isAdmin","Error","register","logout","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useCart","_s2","$RefreshReg$"],"sources":["C:/Users/dinat/OneDrive/Рабочий стол/lining/client/src/context/CartContext.js"],"sourcesContent":["import { createContext, useState, useContext } from 'react';\r\n\r\nconst CartContext = createContext();\r\n\r\nexport const CartProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  \r\n  const login = async (email, password) => {\r\n    // Проверяем учетные данные администратора\r\n    if (email === 'admin1@mail.ru' && password === 'admin12341234') {\r\n      const adminUser = {\r\n        name: 'Администратор',\r\n        email: 'admin1@mail.ru',\r\n        isAdmin: true\r\n      };\r\n      setUser(adminUser);\r\n      return adminUser;\r\n    }\r\n    \r\n    // Здесь должна быть обычная логика входа для обычных пользователей\r\n    // Например, запрос к API:\r\n    // const response = await api.login(email, password);\r\n    // setUser(response.data.user);\r\n    // return response.data.user;\r\n    \r\n    throw new Error('Неверные учетные данные');\r\n  };\r\n\r\n  const register = async (name, email, password) => {\r\n   \r\n    \r\n    throw new Error('Регистрация временно недоступна');\r\n  };\r\n\r\n  const logout = () => {\r\n    setUser(null);\r\n  };\r\n\r\n  const isAdmin = () => {\r\n    return user?.isAdmin === true;\r\n  };\r\n\r\n  return (\r\n    <CartContext.Provider value={{ user, login, register, logout, isAdmin }}>\r\n      {children}\r\n    </CartContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useCart = () => useContext(CartContext);"],"mappings":";;;AAAA,SAASA,aAAa,EAAEC,QAAQ,EAAEC,UAAU,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5D,MAAMC,WAAW,gBAAGL,aAAa,CAAC,CAAC;AAEnC,OAAO,MAAMM,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAEtC,MAAMU,KAAK,GAAG,MAAAA,CAAOC,KAAK,EAAEC,QAAQ,KAAK;IACvC;IACA,IAAID,KAAK,KAAK,gBAAgB,IAAIC,QAAQ,KAAK,eAAe,EAAE;MAC9D,MAAMC,SAAS,GAAG;QAChBC,IAAI,EAAE,eAAe;QACrBH,KAAK,EAAE,gBAAgB;QACvBI,OAAO,EAAE;MACX,CAAC;MACDN,OAAO,CAACI,SAAS,CAAC;MAClB,OAAOA,SAAS;IAClB;;IAEA;IACA;IACA;IACA;IACA;;IAEA,MAAM,IAAIG,KAAK,CAAC,yBAAyB,CAAC;EAC5C,CAAC;EAED,MAAMC,QAAQ,GAAG,MAAAA,CAAOH,IAAI,EAAEH,KAAK,EAAEC,QAAQ,KAAK;IAGhD,MAAM,IAAII,KAAK,CAAC,iCAAiC,CAAC;EACpD,CAAC;EAED,MAAME,MAAM,GAAGA,CAAA,KAAM;IACnBT,OAAO,CAAC,IAAI,CAAC;EACf,CAAC;EAED,MAAMM,OAAO,GAAGA,CAAA,KAAM;IACpB,OAAO,CAAAP,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEO,OAAO,MAAK,IAAI;EAC/B,CAAC;EAED,oBACEZ,OAAA,CAACC,WAAW,CAACe,QAAQ;IAACC,KAAK,EAAE;MAAEZ,IAAI;MAAEE,KAAK;MAAEO,QAAQ;MAAEC,MAAM;MAAEH;IAAQ,CAAE;IAAAT,QAAA,EACrEA;EAAQ;IAAAe,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAACjB,EAAA,CA3CWF,YAAY;AAAAoB,EAAA,GAAZpB,YAAY;AA6CzB,OAAO,MAAMqB,OAAO,GAAGA,CAAA;EAAAC,GAAA;EAAA,OAAM1B,UAAU,CAACG,WAAW,CAAC;AAAA;AAACuB,GAAA,CAAxCD,OAAO;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}