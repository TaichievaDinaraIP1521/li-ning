{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dinat\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\lining\\\\src\\\\context\\\\CartContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CartContext = /*#__PURE__*/createContext();\nexport const CartProvider = ({\n  children\n}) => {\n  _s();\n  // Состояние корзины\n  const [cartItems, setCartItems] = useState([]);\n\n  // Состояние пользователя\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [user, setUser] = useState(null);\n\n  // Состояние заказов\n  const [orders, setOrders] = useState([]);\n\n  // Загрузка данных из localStorage при инициализации\n  useEffect(() => {\n    const loadData = () => {\n      try {\n        const savedCart = localStorage.getItem('cart');\n        const savedUser = localStorage.getItem('user');\n        const savedOrders = localStorage.getItem('orders');\n        if (savedCart) setCartItems(JSON.parse(savedCart));\n        if (savedUser) {\n          setUser(JSON.parse(savedUser));\n          setIsAuthenticated(true);\n        }\n        if (savedOrders) setOrders(JSON.parse(savedOrders));\n      } catch (error) {\n        console.error('Ошибка загрузки данных:', error);\n      }\n    };\n    loadData();\n  }, []);\n\n  // Сохранение данных в localStorage при изменении\n  useEffect(() => {\n    localStorage.setItem('cart', JSON.stringify(cartItems));\n  }, [cartItems]);\n  useEffect(() => {\n    localStorage.setItem('orders', JSON.stringify(orders));\n  }, [orders]);\n\n  // Функции авторизации\n  const login = userData => {\n    setIsAuthenticated(true);\n    setUser(userData);\n    localStorage.setItem('user', JSON.stringify(userData));\n  };\n  const logout = () => {\n    setIsAuthenticated(false);\n    setUser(null);\n    localStorage.removeItem('user');\n  };\n\n  // Функции корзины\n  const addToCart = product => {\n    setCartItems(prevItems => {\n      const existingItem = prevItems.find(item => item.id === product.id);\n      const newItems = existingItem ? prevItems.map(item => item.id === product.id ? {\n        ...item,\n        quantity: item.quantity + 1\n      } : item) : [...prevItems, {\n        ...product,\n        quantity: 1\n      }];\n      return newItems;\n    });\n  };\n  const removeFromCart = productId => {\n    setCartItems(prevItems => prevItems.filter(item => item.id !== productId));\n  };\n  const updateQuantity = (productId, newQuantity) => {\n    if (newQuantity < 1) {\n      removeFromCart(productId);\n      return;\n    }\n    setCartItems(prevItems => prevItems.map(item => item.id === productId ? {\n      ...item,\n      quantity: newQuantity\n    } : item));\n  };\n  const clearCart = () => {\n    setCartItems([]);\n  };\n\n  // Функции заказов\n  const createOrder = () => {\n    if (!isAuthenticated || cartItems.length === 0) return null;\n    const newOrder = {\n      id: Date.now(),\n      userId: user.id,\n      items: [...cartItems],\n      total: cartTotal,\n      date: new Date().toISOString(),\n      status: 'processing'\n    };\n    setOrders(prev => [newOrder, ...prev]);\n    clearCart();\n    return newOrder;\n  };\n  const updateOrderStatus = (orderId, newStatus) => {\n    if (!(user !== null && user !== void 0 && user.isAdmin)) return false;\n    setOrders(prev => prev.map(order => order.id === orderId ? {\n      ...order,\n      status: newStatus\n    } : order));\n    return true;\n  };\n\n  // Вычисляемые значения\n  const cartTotal = cartItems.reduce((total, item) => total + item.price * item.quantity, 0);\n  const cartCount = cartItems.reduce((count, item) => count + item.quantity, 0);\n  const userOrders = isAuthenticated ? orders.filter(order => order.userId === user.id) : [];\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: {\n      // Корзина\n      cartItems,\n      cartTotal,\n      cartCount,\n      addToCart,\n      removeFromCart,\n      updateQuantity,\n      clearCart,\n      // Авторизация\n      isAuthenticated,\n      user,\n      login,\n      logout,\n      // Заказы\n      orders: userOrders,\n      allOrders: user !== null && user !== void 0 && user.isAdmin ? orders : [],\n      createOrder,\n      updateOrderStatus\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 143,\n    columnNumber: 5\n  }, this);\n};\n_s(CartProvider, \"v8TiPKIL7NjAaWVeY7sQdeS2ucc=\");\n_c = CartProvider;\nexport const useCart = () => {\n  _s2();\n  const context = useContext(CartContext);\n  if (!context) {\n    throw new Error('useCart должен использоваться внутри CartProvider');\n  }\n  return context;\n};\n_s2(useCart, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsxDEV","_jsxDEV","CartContext","CartProvider","children","_s","cartItems","setCartItems","isAuthenticated","setIsAuthenticated","user","setUser","orders","setOrders","loadData","savedCart","localStorage","getItem","savedUser","savedOrders","JSON","parse","error","console","setItem","stringify","login","userData","logout","removeItem","addToCart","product","prevItems","existingItem","find","item","id","newItems","map","quantity","removeFromCart","productId","filter","updateQuantity","newQuantity","clearCart","createOrder","length","newOrder","Date","now","userId","items","total","cartTotal","date","toISOString","status","prev","updateOrderStatus","orderId","newStatus","isAdmin","order","reduce","price","cartCount","count","userOrders","Provider","value","allOrders","fileName","_jsxFileName","lineNumber","columnNumber","_c","useCart","_s2","context","Error","$RefreshReg$"],"sources":["C:/Users/dinat/OneDrive/Рабочий стол/lining/src/context/CartContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\n\r\nconst CartContext = createContext();\r\n\r\nexport const CartProvider = ({ children }) => {\r\n  // Состояние корзины\r\n  const [cartItems, setCartItems] = useState([]);\r\n  \r\n  // Состояние пользователя\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n  const [user, setUser] = useState(null);\r\n  \r\n  // Состояние заказов\r\n  const [orders, setOrders] = useState([]);\r\n\r\n  // Загрузка данных из localStorage при инициализации\r\n  useEffect(() => {\r\n    const loadData = () => {\r\n      try {\r\n        const savedCart = localStorage.getItem('cart');\r\n        const savedUser = localStorage.getItem('user');\r\n        const savedOrders = localStorage.getItem('orders');\r\n        \r\n        if (savedCart) setCartItems(JSON.parse(savedCart));\r\n        if (savedUser) {\r\n          setUser(JSON.parse(savedUser));\r\n          setIsAuthenticated(true);\r\n        }\r\n        if (savedOrders) setOrders(JSON.parse(savedOrders));\r\n      } catch (error) {\r\n        console.error('Ошибка загрузки данных:', error);\r\n      }\r\n    };\r\n\r\n    loadData();\r\n  }, []);\r\n\r\n  // Сохранение данных в localStorage при изменении\r\n  useEffect(() => {\r\n    localStorage.setItem('cart', JSON.stringify(cartItems));\r\n  }, [cartItems]);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('orders', JSON.stringify(orders));\r\n  }, [orders]);\r\n\r\n  // Функции авторизации\r\n  const login = (userData) => {\r\n    setIsAuthenticated(true);\r\n    setUser(userData);\r\n    localStorage.setItem('user', JSON.stringify(userData));\r\n  };\r\n\r\n  const logout = () => {\r\n    setIsAuthenticated(false);\r\n    setUser(null);\r\n    localStorage.removeItem('user');\r\n  };\r\n\r\n  // Функции корзины\r\n  const addToCart = (product) => {\r\n    setCartItems(prevItems => {\r\n      const existingItem = prevItems.find(item => item.id === product.id);\r\n      const newItems = existingItem\r\n        ? prevItems.map(item =>\r\n            item.id === product.id\r\n              ? { ...item, quantity: item.quantity + 1 }\r\n              : item\r\n          )\r\n        : [...prevItems, { ...product, quantity: 1 }];\r\n      \r\n      return newItems;\r\n    });\r\n  };\r\n\r\n  const removeFromCart = (productId) => {\r\n    setCartItems(prevItems => prevItems.filter(item => item.id !== productId));\r\n  };\r\n\r\n  const updateQuantity = (productId, newQuantity) => {\r\n    if (newQuantity < 1) {\r\n      removeFromCart(productId);\r\n      return;\r\n    }\r\n\r\n    setCartItems(prevItems =>\r\n      prevItems.map(item =>\r\n        item.id === productId ? { ...item, quantity: newQuantity } : item\r\n      )\r\n    );\r\n  };\r\n\r\n  const clearCart = () => {\r\n    setCartItems([]);\r\n  };\r\n\r\n  // Функции заказов\r\n  const createOrder = () => {\r\n    if (!isAuthenticated || cartItems.length === 0) return null;\r\n    \r\n    const newOrder = {\r\n      id: Date.now(),\r\n      userId: user.id,\r\n      items: [...cartItems],\r\n      total: cartTotal,\r\n      date: new Date().toISOString(),\r\n      status: 'processing'\r\n    };\r\n\r\n    setOrders(prev => [newOrder, ...prev]);\r\n    clearCart();\r\n    \r\n    return newOrder;\r\n  };\r\n\r\n  const updateOrderStatus = (orderId, newStatus) => {\r\n    if (!user?.isAdmin) return false;\r\n    \r\n    setOrders(prev =>\r\n      prev.map(order =>\r\n        order.id === orderId ? { ...order, status: newStatus } : order\r\n      )\r\n    );\r\n    return true;\r\n  };\r\n\r\n  // Вычисляемые значения\r\n  const cartTotal = cartItems.reduce(\r\n    (total, item) => total + item.price * item.quantity,\r\n    0\r\n  );\r\n\r\n  const cartCount = cartItems.reduce(\r\n    (count, item) => count + item.quantity,\r\n    0\r\n  );\r\n\r\n  const userOrders = isAuthenticated\r\n    ? orders.filter(order => order.userId === user.id)\r\n    : [];\r\n\r\n  return (\r\n    <CartContext.Provider\r\n      value={{\r\n        // Корзина\r\n        cartItems,\r\n        cartTotal,\r\n        cartCount,\r\n        addToCart,\r\n        removeFromCart,\r\n        updateQuantity,\r\n        clearCart,\r\n        \r\n        // Авторизация\r\n        isAuthenticated,\r\n        user,\r\n        login,\r\n        logout,\r\n        \r\n        // Заказы\r\n        orders: userOrders,\r\n        allOrders: user?.isAdmin ? orders : [],\r\n        createOrder,\r\n        updateOrderStatus\r\n      }}\r\n    >\r\n      {children}\r\n    </CartContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useCart = () => {\r\n  const context = useContext(CartContext);\r\n  if (!context) {\r\n    throw new Error('useCart должен использоваться внутри CartProvider');\r\n  }\r\n  return context;\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}