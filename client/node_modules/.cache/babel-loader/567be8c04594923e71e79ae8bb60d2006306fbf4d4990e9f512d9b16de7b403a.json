{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dinat\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\lining\\\\client\\\\src\\\\context\\\\CartContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// client/src/context/CartContext.js\n\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CartContext = /*#__PURE__*/createContext();\nexport const CartProvider = ({\n  children\n}) => {\n  _s();\n  const [cart, setCart] = useState([]);\n  const [user, setUser] = useState(null);\n  const [isAdmin, setIsAdmin] = useState(false);\n  const [users, setUsers] = useState([{\n    id: 1,\n    name: 'Admin',\n    email: 'admin@example.com',\n    password: 'admin123',\n    isAdmin: true\n  }, {\n    id: 2,\n    name: 'User',\n    email: 'user@example.com',\n    password: 'user123',\n    isAdmin: false\n  }]);\n  const fetchUserCart = async token => {\n    try {\n      const res = await fetch('/api/cart', {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      if (!res.ok) throw new Error('Не удалось загрузить корзину');\n      const data = await res.json();\n      const items = data.items.map(i => ({\n        ...i.product,\n        quantity: i.quantity\n      }));\n      setCart(items);\n    } catch (err) {\n      console.error('Ошибка загрузки корзины:', err);\n    }\n  };\n  // Загрузка данных при старте\n  useEffect(() => {\n    const storedUser = localStorage.getItem('user');\n    const token = storedUser ? JSON.parse(storedUser).token : null;\n    if (token) {\n      fetchUserCart(token);\n    } else {\n      const savedCart = JSON.parse(localStorage.getItem('tempCart')) || [];\n      setCart(savedCart);\n    }\n  }, []);\n  useEffect(() => {\n    const token = user === null || user === void 0 ? void 0 : user.token;\n    if (token && cart.length) {\n      syncCartWithServer(token);\n    }\n  }, [cart, user]);\n\n  // Вход пользователя\n  const login = async (email, password) => {\n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n        const foundUser = users.find(u => u.email.trim() === email.trim() && u.password.trim() === password.trim());\n        if (foundUser) {\n          setUser(foundUser);\n          setIsAdmin(foundUser.isAdmin);\n          localStorage.setItem('user', JSON.stringify(foundUser));\n          toast.success('Вы вошли!');\n          resolve(foundUser);\n        } else {\n          toast.error('Неверный email или пароль');\n          reject(new Error('Неверный email или пароль'));\n        }\n      }, 500);\n    });\n  };\n\n  // Регистрация\n  const register = async (name, email, password) => {\n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n        if (users.some(u => u.email.trim() === email.trim())) {\n          toast.warn('Пользователь с таким email уже существует');\n          reject(new Error('Пользователь с таким email уже существует'));\n          return;\n        }\n        if (password.length < 6) {\n          toast.warn('Пароль должен быть минимум 6 символов');\n          reject(new Error('Пароль должен быть минимум 6 символов'));\n          return;\n        }\n        const newUser = {\n          id: Date.now(),\n          name,\n          email,\n          password,\n          isAdmin: false\n        };\n        setUsers(prev => [...prev, newUser]);\n        setUser(newUser);\n        setIsAdmin(false);\n        localStorage.setItem('user', JSON.stringify(newUser));\n        toast.success('Регистрация успешна!');\n        resolve(newUser);\n      }, 500);\n    });\n  };\n\n  // Выход\n  const logout = () => {\n    setUser(null);\n    setIsAdmin(false);\n    localStorage.removeItem('user');\n    toast.info('Вы вышли из системы');\n  };\n\n  // Получить текущего пользователя\n  const fetchCurrentUser = () => {\n    const storedUser = localStorage.getItem('user');\n    if (storedUser) {\n      const parsedUser = JSON.parse(storedUser);\n      setUser(parsedUser);\n      setIsAdmin(parsedUser.isAdmin || false);\n      return parsedUser;\n    }\n    return null;\n  };\n\n  // Добавление товара\n  const addToCart = product => {\n    setCart(prev => {\n      const existingItem = prev.find(item => item.id === product.id);\n      if (existingItem) {\n        return prev.map(item => item.id === product.id ? {\n          ...item,\n          quantity: (item.quantity || 1) + 1\n        } : item);\n      }\n      return [...prev, {\n        ...product,\n        quantity: 1\n      }];\n    });\n    toast.success(`${product.name} добавлен в корзину`);\n  };\n\n  // Уменьшение количества\n  const decreaseQuantity = productId => {\n    setCart(prev => prev.map(item => item.id === productId && item.quantity > 1 ? {\n      ...item,\n      quantity: item.quantity - 1\n    } : item).filter(item => item.quantity > 0));\n    toast.info('Один товар убран из корзины');\n  };\n\n  // Полное удаление\n  const removeFromCart = productId => {\n    setCart(prev => prev.filter(item => item.id !== productId));\n    toast.info('Товар полностью удален из корзины');\n  };\n\n  // Очистка\n  const clearCart = () => {\n    setCart([]);\n    toast.success('Корзина очищена');\n  };\n\n  // Подсчёт товаров\n  const cartCount = cart.reduce((sum, item) => sum + (item.quantity || 1), 0);\n\n  // Общая сумма\n  const cartTotal = cart.reduce((sum, item) => sum + item.price * item.quantity, 0);\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: {\n      cart,\n      user,\n      isAdmin,\n      cartCount,\n      cartTotal,\n      addToCart,\n      removeFromCart,\n      decreaseQuantity,\n      clearCart,\n      login,\n      register,\n      fetchCurrentUser,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 195,\n    columnNumber: 5\n  }, this);\n};\n_s(CartProvider, \"5pLgBJCutVd0iLjoI3ryl8b4/VU=\");\n_c = CartProvider;\nexport const useCart = () => {\n  _s2();\n  return useContext(CartContext);\n};\n_s2(useCart, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","toast","jsxDEV","_jsxDEV","CartContext","CartProvider","children","_s","cart","setCart","user","setUser","isAdmin","setIsAdmin","users","setUsers","id","name","email","password","fetchUserCart","token","res","fetch","headers","ok","Error","data","json","items","map","i","product","quantity","err","console","error","storedUser","localStorage","getItem","JSON","parse","savedCart","length","syncCartWithServer","login","Promise","resolve","reject","setTimeout","foundUser","find","u","trim","setItem","stringify","success","register","some","warn","newUser","Date","now","prev","logout","removeItem","info","fetchCurrentUser","parsedUser","addToCart","existingItem","item","decreaseQuantity","productId","filter","removeFromCart","clearCart","cartCount","reduce","sum","cartTotal","price","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useCart","_s2","$RefreshReg$"],"sources":["C:/Users/dinat/OneDrive/Рабочий стол/lining/client/src/context/CartContext.js"],"sourcesContent":["// client/src/context/CartContext.js\r\n\r\nimport React, { createContext, useContext, useState, useEffect } from 'react';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nexport const CartContext = createContext();\r\n\r\nexport const CartProvider = ({ children }) => {\r\n  const [cart, setCart] = useState([]);\r\n  const [user, setUser] = useState(null);\r\n  const [isAdmin, setIsAdmin] = useState(false);\r\n\r\n  const [users, setUsers] = useState([\r\n    {\r\n      id: 1,\r\n      name: 'Admin',\r\n      email: 'admin@example.com',\r\n      password: 'admin123',\r\n      isAdmin: true\r\n    },\r\n    {\r\n      id: 2,\r\n      name: 'User',\r\n      email: 'user@example.com',\r\n      password: 'user123',\r\n      isAdmin: false\r\n    }\r\n  ]);\r\n  \r\nconst fetchUserCart = async (token) => {\r\n  try {\r\n    const res = await fetch('/api/cart', {\r\n      headers: {\r\n        'Authorization': `Bearer ${token}`\r\n      }\r\n    });\r\n\r\n    if (!res.ok) throw new Error('Не удалось загрузить корзину');\r\n\r\n    const data = await res.json();\r\n    const items = data.items.map(i => ({ ...i.product, quantity: i.quantity }));\r\n    setCart(items);\r\n  } catch (err) {\r\n    console.error('Ошибка загрузки корзины:', err);\r\n  }\r\n};\r\n  // Загрузка данных при старте\r\n useEffect(() => {\r\n  const storedUser = localStorage.getItem('user');\r\n  const token = storedUser ? JSON.parse(storedUser).token : null;\r\n\r\n  if (token) {\r\n    fetchUserCart(token);\r\n  } else {\r\n    const savedCart = JSON.parse(localStorage.getItem('tempCart')) || [];\r\n    setCart(savedCart);\r\n  }\r\n}, []);\r\n\r\nuseEffect(() => {\r\n  const token = user?.token;\r\n  if (token && cart.length) {\r\n    syncCartWithServer(token);\r\n  }\r\n}, [cart, user]);\r\n\r\n  // Вход пользователя\r\n  const login = async (email, password) => {\r\n    return new Promise((resolve, reject) => {\r\n      setTimeout(() => {\r\n        const foundUser = users.find(\r\n          u => u.email.trim() === email.trim() && u.password.trim() === password.trim()\r\n        );\r\n\r\n        if (foundUser) {\r\n          setUser(foundUser);\r\n          setIsAdmin(foundUser.isAdmin);\r\n          localStorage.setItem('user', JSON.stringify(foundUser));\r\n          toast.success('Вы вошли!');\r\n          resolve(foundUser);\r\n        } else {\r\n          toast.error('Неверный email или пароль');\r\n          reject(new Error('Неверный email или пароль'));\r\n        }\r\n      }, 500);\r\n    });\r\n  };\r\n\r\n  // Регистрация\r\n  const register = async (name, email, password) => {\r\n    return new Promise((resolve, reject) => {\r\n      setTimeout(() => {\r\n        if (users.some(u => u.email.trim() === email.trim())) {\r\n          toast.warn('Пользователь с таким email уже существует');\r\n          reject(new Error('Пользователь с таким email уже существует'));\r\n          return;\r\n        }\r\n\r\n        if (password.length < 6) {\r\n          toast.warn('Пароль должен быть минимум 6 символов');\r\n          reject(new Error('Пароль должен быть минимум 6 символов'));\r\n          return;\r\n        }\r\n\r\n        const newUser = {\r\n          id: Date.now(),\r\n          name,\r\n          email,\r\n          password,\r\n          isAdmin: false\r\n        };\r\n\r\n        setUsers(prev => [...prev, newUser]);\r\n        setUser(newUser);\r\n        setIsAdmin(false);\r\n        localStorage.setItem('user', JSON.stringify(newUser));\r\n        toast.success('Регистрация успешна!');\r\n        resolve(newUser);\r\n      }, 500);\r\n    });\r\n  };\r\n\r\n  // Выход\r\n  const logout = () => {\r\n    setUser(null);\r\n    setIsAdmin(false);\r\n    localStorage.removeItem('user');\r\n    toast.info('Вы вышли из системы');\r\n  };\r\n\r\n  // Получить текущего пользователя\r\n  const fetchCurrentUser = () => {\r\n    const storedUser = localStorage.getItem('user');\r\n    if (storedUser) {\r\n      const parsedUser = JSON.parse(storedUser);\r\n      setUser(parsedUser);\r\n      setIsAdmin(parsedUser.isAdmin || false);\r\n      return parsedUser;\r\n    }\r\n    return null;\r\n  };\r\n\r\n  // Добавление товара\r\n  const addToCart = (product) => {\r\n    setCart((prev) => {\r\n      const existingItem = prev.find(item => item.id === product.id);\r\n      if (existingItem) {\r\n        return prev.map(item =>\r\n          item.id === product.id\r\n            ? { ...item, quantity: (item.quantity || 1) + 1 }\r\n            : item\r\n        );\r\n      }\r\n      return [...prev, { ...product, quantity: 1 }];\r\n    });\r\n\r\n    toast.success(`${product.name} добавлен в корзину`);\r\n  };\r\n\r\n  // Уменьшение количества\r\n  const decreaseQuantity = (productId) => {\r\n    setCart((prev) =>\r\n      prev\r\n        .map((item) =>\r\n          item.id === productId && item.quantity > 1\r\n            ? { ...item, quantity: item.quantity - 1 }\r\n            : item\r\n        )\r\n        .filter((item) => item.quantity > 0)\r\n    );\r\n\r\n    toast.info('Один товар убран из корзины');\r\n  };\r\n\r\n  // Полное удаление\r\n  const removeFromCart = (productId) => {\r\n    setCart((prev) => prev.filter(item => item.id !== productId));\r\n    toast.info('Товар полностью удален из корзины');\r\n  };\r\n\r\n  // Очистка\r\n  const clearCart = () => {\r\n    setCart([]);\r\n    toast.success('Корзина очищена');\r\n  };\r\n\r\n  // Подсчёт товаров\r\n  const cartCount = cart.reduce((sum, item) => sum + (item.quantity || 1), 0);\r\n\r\n  // Общая сумма\r\n  const cartTotal = cart.reduce((sum, item) => sum + item.price * item.quantity, 0);\r\n\r\n  return (\r\n    <CartContext.Provider\r\n      value={{\r\n        cart,\r\n        user,\r\n        isAdmin,\r\n        cartCount,\r\n        cartTotal,\r\n        addToCart,\r\n        removeFromCart,\r\n        decreaseQuantity,\r\n        clearCart,\r\n        login,\r\n        register,\r\n        fetchCurrentUser,\r\n        logout\r\n      }}\r\n    >\r\n      {children}\r\n    </CartContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useCart = () => useContext(CartContext);"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}